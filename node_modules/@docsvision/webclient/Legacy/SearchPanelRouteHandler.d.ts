import { IRouteHandler } from "@docsvision/webclient/System/IRouteHandler";
import { RouteHandleResult } from "@docsvision/webclient/System/RouteHandleResult";
import { RouteType } from "@docsvision/webclient/System/RouteType";
import { $WebFrameContext } from '@docsvision/webclient/Platform/$WebFrameContext';
import { $SearchPanel } from '@docsvision/webclient/Legacy/$SearchPanel';
import { $ExperimentalFeature } from "@docsvision/webclient/System/$ExperimentalFeature";
import { $ApplicationSettings, $IsIE } from "@docsvision/webclient/StandardServices";
import { $DeviceType } from "@docsvision/web/core/system-services/environment";
/** @internal */
export declare class SearchPanelRouteHandler implements IRouteHandler<any> {
    private services;
    name: string;
    availableRouteHandler: boolean;
    constructor(services: $WebFrameContext & $SearchPanel & $ExperimentalFeature & $ApplicationSettings & $IsIE & $DeviceType);
    prepareRouteDataLoad(routeData: any, routeType: RouteType): Promise<RouteHandleResult>;
    mountRoute(data: any, routeType: RouteType): Promise<RouteHandleResult>;
    unmountRoute(data: any, routeType: RouteType): Promise<void>;
}
/** @internal Временная функция, перестраивающая панель поиска в обход стандартного механизма роутинга. Функция будет удалена в следующих релизах. */
export declare function __DangerRemountSearchPanel(): void;
