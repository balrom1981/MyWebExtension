import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { SearchDropdown } from "@docsvision/webclient/Legacy/SearchDropdown";
import { ISearchPanel } from "@docsvision/webclient/Legacy/$SearchPanel";
import { $DeviceType } from "@docsvision/webclient/StandardServices";
import { $WebFrameContext } from '@docsvision/webclient/Platform/$WebFrameContext';
import { SimpleEvent } from '@docsvision/webclient/System/SimpleEvent';
import { WebFrameSearchPanel } from '@docsvision/webclient/Platform/WebFrameSearchPanel';
/** @deprecated */
/** @internal */
export declare class SearchPanel implements ISearchPanel {
    private services;
    private traceProvider;
    toggled: SimpleEvent<boolean>;
    private WebFrameSearchPanel;
    constructor(services: $DeviceType & $WebFrameContext, control?: WebFrameSearchPanel);
    get ShouldResetInstanceBeforeSearch(): boolean;
    /** @obsolete */
    get DeviceType(): GenModels.DeviceType;
    get IsDashboard(): boolean;
    get IsSearchResults(): boolean;
    get Dropdown(): SearchDropdown;
    get IsNotOpened(): boolean;
    get FullTextSearchEnabled(): boolean;
    Hide(): void;
    Expand(): void;
    Show(): void;
    get SearchText(): string;
    set SearchText(value: string);
    get SearchTextFromInput(): string;
    set SearchTextFromInput(value: string);
    get SearchContext(): GenModels.SearchContextOption;
    Search(refresh?: boolean): void;
    Reset(): void;
    Clear(): void;
    Rebuild(): void;
    get SearchInput(): HTMLElement;
    get SearchTextInput(): HTMLInputElement;
}
