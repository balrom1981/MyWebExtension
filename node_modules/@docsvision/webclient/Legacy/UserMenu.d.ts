import { $LayoutController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { ModalWindow } from "@docsvision/webclient/Legacy/ModalWindow";
import { $Sidebar } from "@docsvision/webclient/Legacy/$Sidebar";
import { $DeviceType, $WebViewIOSEnabled } from "@docsvision/webclient/StandardServices";
import { IUserMenu } from "@docsvision/webclient/Legacy/$UserMenu";
import { $LayoutManager } from "@docsvision/webclient/System/$LayoutManager";
import { $RealtimeCommunicationService } from "@docsvision/webclient/System/$RealtimeCommunicationService";
import { BasicApiEvent } from '@docsvision/webclient/System/ApiEvent';
/** @internal */
export declare class UserMenu implements IUserMenu {
    private services;
    private traceProvider;
    private isClosed;
    toggle?: BasicApiEvent<boolean>;
    constructor(services: $RealtimeCommunicationService & $LayoutController & $LayoutManager & $Sidebar & $DeviceType & $WebViewIOSEnabled);
    get IsClosed(): boolean;
    Show: () => void;
    UserModal: ModalWindow;
    CloseMenu: () => void;
    private onRouteChanges;
    ShowAboutDialog: (title: string) => void;
    ShowExitDialog: () => Promise<void>;
    ShowUserProfileDialog: () => Promise<any>;
}
