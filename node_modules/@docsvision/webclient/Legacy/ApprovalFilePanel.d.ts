import { IBasicEvent } from '@docsvision/webclient/System/IBasicEvent';
import { IEventArgs } from '@docsvision/webclient/System/IEventArgs';
import { $CardId, $CardInfo, $CardTimestamp } from '@docsvision/webclient/System/LayoutServices';
import { $RequestManager } from '@docsvision/webclient/System/$RequestManager';
import { $FileService } from "@docsvision/webclient/System/$FileService";
import { $ApplicationSettings, $SiteUrl } from "@docsvision/webclient/StandardServices";
import { $LayoutFileController, $R7OfficeController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { $WebServices } from "@docsvision/webclient/System/IWebServicesService";
import { $MessageBox } from "@docsvision/webclient/System/$MessageBox";
export declare class ApprovalFilePanel {
    static ControlTypeName: string;
    private static FileLinkCssClass;
    private static FileSettingsCssClass;
    private static FileItemCssClass;
    private static FileVersionCssClass;
    private static VersionSettingsCssClass;
    private static SettingMenuCssClass;
    private static VersionSettingMenuCssClass;
    private static CopyToFinalCmdCssClass;
    private static DeleteFileVersionCssClass;
    private static VersionCommentCssClass;
    private static MenuVersionCommentCssClass;
    private static MainFilesPlaceholder;
    private static AdditionalFilesPlaceholder;
    private static AddFileVersionLabel;
    private static MarkVersionAsFinalCssClass;
    private filePanel;
    private currentSettings;
    private selectedElement;
    private taskId;
    private disclosureId;
    private controlReloadRequested;
    services: $CardTimestamp & $RequestManager & $FileService & $ApplicationSettings & $R7OfficeController & $SiteUrl & $CardInfo & $CardId & $Layout & $LayoutFileController & $WebServices & $MessageBox;
    openedInEditorFiles: string[];
    get ControlReloadRequested(): IBasicEvent<IEventArgs>;
    constructor(filePanelId: string);
    private Initialize;
    registerTimestampUpdaters(): void;
    private prepareWebDavLinks;
    private initFilesHandlers;
    private SelectEventClick;
    private SettingEventHandler;
    private VersionEventHandler;
    private updateOpenFileMenuSettings;
    getVisibilityOpenFileButton(fileId: string): boolean;
    openFile(fileCardId: string, fileId: string, currentFileId: string, fileName: string, readonly: boolean, approvalDocumentId: string): Promise<void>;
    private getOpenFileRequestData;
    private sendOpenFileRequest;
    private sendOpenFileDvWebTool;
    getExpandedVersions(): string[];
    expandVersions(fileId: string, expand?: boolean): void;
    private ShowVersions;
    private DeleteFileVersionEventHandler;
    private MarkVersionAsFinalEventHandler;
    private AddCopyToFinalEventHandler;
    private VersionsSettingsEventHandlers;
    private ShowSettingsEventClick;
    private ShowSettings;
    private PreviewFileEventHandler;
    private AddFileCommentEventHandler;
    private requestControlReload;
    private SuppressEvents;
    private WrapperEventHandler;
}
