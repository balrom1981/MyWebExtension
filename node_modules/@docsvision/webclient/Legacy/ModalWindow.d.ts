import { ModalWindowEvents, ModalWindowParams } from "@docsvision/webclient/Legacy/ModalWindowParams";
import { Optional } from '@docsvision/web/core/services';
import { $RootCssClass } from '@docsvision/webclient/Helpers/$RootCssClass';
import { $DeviceType } from "@docsvision/webclient/StandardServices";
/** @internal */
export interface IModalWindowCreatorOptions {
    withoutAnimation?: boolean;
}
/** @deprecated Используйте {@link ModalDialog} или {@link MessageBox}. */
export declare class ModalWindow {
    private services?;
    private traceProvider;
    private params;
    private overlay;
    private modal;
    private modalHeader;
    private modalContent;
    private focusTrap;
    private modalOkButton;
    private modalCancelButton;
    private modalCloseButton;
    private modalMaximizeButton;
    private buttonsDiv;
    private content;
    private isOpened;
    events: ModalWindowEvents;
    static lastError?: ModalWindow;
    private rootCssClass;
    constructor(params: ModalWindowParams, services?: Optional<$RootCssClass> & $DeviceType);
    get IsOpened(): boolean;
    get ModalElement(): HTMLElement;
    get ModalContentElement(): HTMLElement;
    get OkButtonElement(): HTMLButtonElement;
    get CancelButtonElement(): HTMLButtonElement;
    private onMaximize;
    Show(withoutAnimation?: boolean): void;
    Hide(withCallbacks?: boolean, withoutAnimation?: boolean): Promise<any>;
    HideOverlay(): void;
    private Initialize;
    private CreateOverlay;
    private CreateModal;
    private CreateModalContent;
    private CreateModalCloseButton;
    private CreateModalmaximizeButton;
    private CreateModalHeader;
    private CreateModalButtonsDiv;
    private CreateModalOkButton;
    private CreateModalButton;
    private CreateModalCancelButton;
    private Destroy;
    static ShowErrorDialog(message: string, options?: IModalWindowCreatorOptions): ModalWindow;
    static ShowConfirmDialog(message: string, yesButton?: Function, cancelButton?: Function, options?: IModalWindowCreatorOptions, services?: Optional<$RootCssClass> & $DeviceType): ModalWindow;
    static ShowInformationDialog(message: string, headerText?: string, options?: IModalWindowCreatorOptions): ModalWindow;
    static ShowWarningDialog(message: string, headerText?: string, okButton?: Function, cancelButton?: Function, options?: IModalWindowCreatorOptions): ModalWindow;
}
