import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { SimpleEvent } from '@docsvision/webclient/System/SimpleEvent';
import { MouseEventHandler } from 'react';
/** Сервис для доступа к данным карточек, удовлетворяющих параметрам поискового запроса. */
export interface ILinksSearchCardsService {
    /** ID поискового запроса */
    searchId: string;
    /** Массив выбранных карточек */
    selectedCards: GenModels.CardPresentation[];
    /** Тип ссылки */
    selectedLinkTypeId: string;
    /** Типы карточек при добавлении ссылки */
    allowedCardTypes?: GenModels.CardNodeInfo[];
    /** Доступные типы ссылок */
    allowedLinkTypes?: GenModels.LinkTypeModel[];
    /** Вид карточки при добавлении файла. */
    addFileKind?: GenModels.CardNodeInfo;
    bindingInfo?: GenModels.SimpleBindingInfo;
    /** Хранить ли сильную ссылку */
    saveHardLink?: boolean;
    /** Доступен ли множественный выбор. */
    allowMultipleSelection?: boolean;
    editOperation?: string;
    folderList?: GenModels.SelectFolderNode[];
    /** Функция-обработчик кнопки ОК окна поиска */
    onOkClick: MouseEventHandler;
    /** Функция-обработчик кнопки Cancel окна поиска */
    onCancelClick: MouseEventHandler;
    descriptionColumnViewMode: GenModels.LinksDescriptionColumnViewMode;
    descriptionColumnMethodKey: string;
    /** Событие смены поискового запроса */
    changeSearchId: SimpleEvent<void>;
}
export declare type $LinksSearchCards = {
    linksSearchCards: ILinksSearchCardsService;
};
export declare const $LinksSearchCards: string | ((model?: $LinksSearchCards) => ILinksSearchCardsService);
