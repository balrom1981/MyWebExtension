/// <reference types="react" />
/** @internal */
export interface ICardKindTreeNodeProps {
    available: boolean;
}
/** @internal */
export declare const CardKindTreeNode: 
import("styled-components").StyledComponent<"a", any, Partial<Pick<
import("react").DetailedHTMLProps<
 | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "download" | "hrefLang" | "ping" | "rel" | "referrerPolicy"> & {
    ref?: ((instance: HTMLAnchorElement) => void) | 
import("react").RefObject<HTMLAnchorElement>;
}> & {
    [others: string]: any;
} & ICardKindTreeNodeProps, string>;
