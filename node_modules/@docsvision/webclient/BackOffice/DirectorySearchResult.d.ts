/// <reference types="react" />
import { DirectorySearchResultLogic } from '@docsvision/webclient/BackOffice/DirectorySearchResultLogic';
import { DirectorySearchResultView } from '@docsvision/webclient/BackOffice/DirectorySearchResultView';
import { $WebFrameDirectorySearchPanelService } from '@docsvision/webclient/BackOffice/$WebFrameDirectorySearchPanelService';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { HtmlProps, IComponentProps } from '@docsvision/web/core/component';

import { LoadingStatus } from '@docsvision/webclient/System/LoadingState';
import { StaffDirectorySearchResponseT } from '@docsvision/webclient/BackOffice/StaffDirectoryLogic';
export declare type SearchCommonResponseT = {
    searchMode: any;
    searchText?: string;
    totalCount?: number;
    year?: number;
};
export declare type StaffResponse = StaffDirectorySearchResponseT & SearchCommonResponseT;
export declare type DirectorySearchResponse = StaffResponse;
/** @internal */
export interface IDirectorySearchResultProps extends HtmlProps.div, IComponentProps<DirectorySearchResultLogic, DirectorySearchResultView> {
    data: DirectorySearchResponse;
    selected?: GenModels.SearchItemModel;
    selectItem?: (item: GenModels.SearchItemModel) => GenModels.SearchItemModel;
    resultLoader?: () => Promise<DirectorySearchResponse>;
    getItemIconClass: (item: GenModels.SearchItemModel) => string;
    services?: $WebFrameDirectorySearchPanelService;
    loading?: LoadingStatus;
    onExpanded?: (expanded: boolean) => void;
}
/** @internal */
export declare const DirectorySearchResult: (props: IDirectorySearchResultProps) => JSX.Element;
