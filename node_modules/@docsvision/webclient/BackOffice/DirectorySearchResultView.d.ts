/// <reference types="react" />
import { DirectorySearchBreadcrumbs } from "@docsvision/webclient/BackOffice/DirectorySearchBreadcrumbs";
import { DirectorySearchContainer } from "@docsvision/webclient/BackOffice/DirectorySearchContainer";
import { DirectorySearchCounter } from "@docsvision/webclient/BackOffice/DirectorySearchCounter";
import { DirectorySearchInfo } from "@docsvision/webclient/BackOffice/DirectorySearchInfo";
import { DirectorySearchResultList } from "@docsvision/webclient/BackOffice/DirectorySearchResultList";
import { DirectorySearchResponse } from "@docsvision/webclient/BackOffice/DirectorySearchResult";
/** @internal */
export declare class DirectorySearchResultView {
    container: typeof DirectorySearchContainer;
    content: 
import("react").ForwardRefExoticComponent<Pick<
 | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "opened"> & 
import("react").RefAttributes<unknown>>;
    iconButton: (props: 
import("C:/Dev/WebCDev/Helpers/IconButton").IIconButtonProps) => JSX.Element;
    searchResultList: typeof DirectorySearchResultList;
    searchBreadcrumbs: typeof DirectorySearchBreadcrumbs;
    searchInfo: typeof DirectorySearchInfo;
    searchCounter: typeof DirectorySearchCounter;
    getCountText(data: DirectorySearchResponse): string;
}
