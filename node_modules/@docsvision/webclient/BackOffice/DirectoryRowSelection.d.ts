import { ITableData, ITablePlugins, TablePlugins } from "@docsvision/web/components/table/interfaces";
import { $RowIndex } from "@docsvision/web/components/table/plugins/row-index";
import { $ScrollPosition } from "@docsvision/web/components/table/plugins/scroll";
import { $TableData } from "@docsvision/web/components/table/plugins/table-data";
import { ISimplePluginData } from "@docsvision/web/core/extensibility/plugins";
import { $Domain } from "@docsvision/web/core/state-management";
import { Store, Event } from "effector";

export declare function getSelectedEntityId(table: ITableData): ISimplePluginData<string>;
export declare function getRowSelectionProcessId(table: ITableData): ISimplePluginData<any>;
export interface IDirectoryRowSelectionService {
    /** Флаг отображения компонента */
    $selectedEntityId: Store<string>;
    /** Событие отображения/скрытия компонента */
    selectEntity: Event<string>;
}
export declare type $DirectoryRowSelection = {
    directoryRowSelection: IDirectoryRowSelectionService;
};
export declare const $DirectoryRowSelection: string | ((model?: $DirectoryRowSelection) => IDirectoryRowSelectionService);
export declare const DirectoryRowSelectionFeature = "DirectoryRowSelection";
export declare const DirectoryRowSelectionServiceProvider: TablePlugins.ServiceProvider<$DirectoryRowSelection & $Domain>;
export declare const DirectoryRowSelectionDecorator: TablePlugins.Row.Decorator;
export declare const DirectoryRowSelectionMountEffect: TablePlugins.Table.MountEffect<$DirectoryRowSelection & $ScrollPosition & $RowIndex & $TableData>;
export declare const RowSelectionPlugins: ITablePlugins;
