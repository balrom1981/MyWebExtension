import { DirectoryDesignerRowImpl, DirectoryDesignerRowState } from "@docsvision/webclient/BackOffice/DirectoryDesignerRowImpl";
import { $DirectoryDesignerRowController, $LayoutRowController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $DeviceType } from "@docsvision/webclient/StandardServices";
import { DirectoryBase, DirectoryBaseParams } from "@docsvision/webclient/System/DirectoryBase";
import { $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { $LocationContainerControlServices } from "@docsvision/webclient/System/LocationContainerControl";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { BasicApiEvent, CancelableApiEvent } from '@docsvision/webclient/System/ApiEvent';
export declare type DirectoryDesignerRowValueType = GenModels.DirectoryDesignerItem;
export declare type DirectoryDesignerRowNodeType = GenModels.DirectoryDesignerItem;
declare type ItemT = GenModels.DirectoryDesignerItem;
export declare enum DirectoryDesignerSelectionArea {
    OnlyNode = 0,
    OnlyChildren = 1,
    NodeWithChildren = 2
}
/**
 * Содержит публичные свойства элемента управления [Строка конструктора справочников]{@link DirectoryDesignerRow}.
 */
export declare class DirectoryDesignerRowParams<ValueT extends DirectoryDesignerRowValueType = DirectoryDesignerRowValueType> extends DirectoryBaseParams<ValueT, DirectoryDesignerRowNodeType, ItemT> {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Флаг, указывающий на состояние окна выбора строки: true - открыто, false - закрыто. */
    isDictionaryShown?: boolean;
    /** Использовать ли описание */
    useDescription?: boolean;
    allowNodeSearch?: boolean;
    directoryDataSource?: GenModels.DirectoryDesignerRowDataSourceModel;
    /**
     * Идентификатор узла Конструктора справочников, из которого выбираются записи.
     *
     * Если ограничение по узлам отсутствует, то свойство имеет значение Guid.Empty.
     */
    itemType?: string;
    itemTypeName?: string;
    /** Значение фильтра, которое было выбрано пользователем. */
    selectedFilterPath?: GenModels.DirectoryDesignerItem[];
    availableChanges?: GenModels.AvailableChangesModes;
    /**  Область выбора (и поиска) элементов из Конструктора справочников. */
    selectionArea?: DirectoryDesignerSelectionArea;
    /** Задержка перед поиском (в мс) */
    searchDelay?: number;
    services?: $DirectoryDesignerRowController & $LayoutRowController & $EditOperationStore & $LayoutInfo & $LocationContainerControlServices;
    displayIcon?: boolean;
    /** Событие, возникающее перед открытием модального окна для выбора контрагентов. */
    directoryWindowOpening?: CancelableApiEvent<void>;
    /** Событие, возникающее после открытия модального окна для выбора контрагентов. */
    directoryWindowOpened?: BasicApiEvent<void>;
    /** Событие, возникающее перед закрытием модального окна для выбора контрагентов. */
    directoryWindowClosing?: CancelableApiEvent<void>;
    /** Событие, возникающее после закрытия модального окна для выбора контрагентов. */
    directoryWindowClosed?: BasicApiEvent<void>;
}
/**
 * Класс элемента управления Строка конструктора справочников.
 *
 * Добавляет в web-разметку поле ввода с кнопкой вызова диалогового окна для выбора записи из *Конструктора справочников*.
 */
export declare class DirectoryDesignerRow<ValueT extends DirectoryDesignerRowValueType = DirectoryDesignerRowValueType> extends DirectoryBase<ValueT, DirectoryDesignerRowNodeType, ItemT, DirectoryDesignerRowParams<ValueT>, DirectoryDesignerRowState<ValueT>> {
    protected createParams(): DirectoryDesignerRowParams<ValueT>;
    protected getServices(): $DirectoryDesignerRowController & $LayoutRowController & $EditOperationStore & $LayoutInfo & Partial<
import("C:/Dev/WebCDev/Bin/TypeScriptDefinitions/Generated/DocsVision.WebClient.Controllers").$LayoutController> & 
import("C:/Dev/WebCDev/Bin/TypeScriptDefinitions/System/Services/$LayoutManager").$LayoutManager & Partial<
import("C:/Dev/WebCDev/Bin/TypeScriptDefinitions/System/Controls/Layout/LayoutServices").$CurrentLocation> & Partial<
import("C:/Dev/WebCDev/Bin/TypeScriptDefinitions/System/Controls/Layout/$Layout").$Layout> & $DeviceType;
    private set DirectoryDesignerRowBinding(value);
    private set binding(value);
    private set directoryDataSource(value);
    private set DefaultBindingHandler(value);
    /**
     * Проверяет возможность открытия модального окна выбора строки.
     * @return true - возможно (если значение редактируемое), false - невозможно.
     */
    canShowDictionary(): boolean;
    /**
     * Закрывает окно выбора организации/подразделения.
     */
    hideDictionary(): void;
    protected getBindings(): IBindingResult<any>[];
    protected getParamsToKeep(params: any): {
        selectedFilterPath: any;
        value: ValueT;
    };
    /** @internal */
    protected createImpl(): DirectoryDesignerRowImpl;
}
export {};
