import { ISignatureLabel } from '@docsvision/webclient/Legacy/ISignatureLabel';
import { EncryptedAttribute } from '@docsvision/webclient/Legacy/EncryptedInfo';
import { IFileSignInfo } from '@docsvision/webclient/Legacy/IFileSingInfo';
import { SignatureItemType } from 'Libs/CryptoPro/Crypto';
export declare function downloadFile(fileId: string): Promise<string>;
export declare function downloadDocumentFields(cardId: string): Promise<string>;
export declare function downloadDocumentAttachments(cardId: string): Promise<string>;
export declare const SignFilesWithCertificateIOS: (documentId: string, files: IFileSignInfo[], selectedThumbprint: string, attributes: Array<EncryptedAttribute>, selectedLabel: ISignatureLabel, timestamp: number, signFields?: boolean, signAttachments?: boolean) => Promise<void>;
export declare type IDataIOSSign = {
    Data: string;
    FileVersionId: string;
    FileCardId: string;
    ItemType: SignatureItemType.MainFileSignaturePartType;
    SelectedLabelId: string;
    Attributes: Array<EncryptedAttribute>;
    Timestamp: number;
    CertId: string;
};
export declare function preparePkiClientSignData(signData: IDataIOSSign[]): ({
    data: string;
    fileVersionId: string;
    fileCardId: string;
    itemType: SignatureItemType.MainFileSignaturePartType;
} | {
    data: string;
    itemType: never;
    fileVersionId?: undefined;
    fileCardId?: undefined;
})[];
