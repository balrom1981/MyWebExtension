import { Department, DepartmentParams } from "@docsvision/webclient/BackOffice/Department";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { IEditPopoverProps } from "@docsvision/webclient/Helpers/PopoverHelpers/EditPopover/IEditPopoverProps";
import { ITypeaheadSearchQuery } from "@docsvision/webclient/Helpers/Typeahead/Models/ITypeaheadSearchQuery";
import { ITypeaheadSearchResult } from "@docsvision/webclient/Helpers/Typeahead/Models/ITypeaheadSearchResult";
import { ITypeaheadVariant } from "@docsvision/webclient/Helpers/Typeahead/Models/ITypeaheadVariant";
import { Typeahead } from "@docsvision/webclient/Helpers/Typeahead/Typeahead";
import { InputBasedControlImpl, InputBasedControlState } from "@docsvision/webclient/System/InputBasedControlImpl";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { RequestHelper } from "@docsvision/webclient/System/RequestHelper";
import React from "react";
/** @internal */
export interface DepartmentState extends DepartmentParams, InputBasedControlState<GenModels.DepartmentModel> {
    binding: IBindingResult<GenModels.DepartmentModel>;
    requestHelper: RequestHelper;
    directoryDialogSelectedValue: GenModels.DepartmentModel;
}
/** @internal */
export declare type DepartmentImplState = DepartmentState;
/** @internal */
export declare class DepartmentImpl extends InputBasedControlImpl<GenModels.DepartmentModel, DepartmentParams, DepartmentState> {
    static FirstPageSize: number;
    static NextPageSize: number;
    private typeahead;
    private dialogHost;
    private maximized?;
    constructor(props: DepartmentParams, state: DepartmentState);
    componentDidUpdate(): void;
    protected get source(): GenModels.DepartmentDataSource;
    protected getTextValue(): string;
    protected getValueTitle(): string;
    protected getInputTitle(): string;
    protected renderInto(props: DepartmentParams, container: HTMLElement): void;
    protected showEditPopover(popoverOptions?: IEditPopoverProps): Promise<Department>;
    protected onInputKeyDown(ev: React.KeyboardEvent<any>): void;
    protected get itemTypes(): GenModels.SearchDepartmentType;
    protected findItems(typeaheadQuery: ITypeaheadSearchQuery): Promise<ITypeaheadSearchResult>;
    protected onSelected(variant: ITypeaheadVariant): void;
    showDictionary(): Promise<void>;
    hideDictionary(): void;
    protected attachTypeahead(t: Typeahead): void;
    protected onDirectoryDialogNodeSelected(node: GenModels.DepartmentModel): void;
    protected onDirectoryDialogNodeAccepted(node: GenModels.DepartmentModel): void;
    protected onDirectoryDialogSelectButtonClick(): void;
    protected onInputChange(event: any): void;
    private afterOpenCallback;
    private onMaximize;
    get isDictionaryShown(): boolean;
    protected renderDialog: () => JSX.Element;
    protected renderInputWithPlaceholder(): React.ReactNode;
}
