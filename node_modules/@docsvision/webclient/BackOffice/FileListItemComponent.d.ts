import { FileListItem } from "@docsvision/webclient/BackOffice/FileListItem";
import { FileListControlLogic } from "@docsvision/webclient/BackOffice/FileListControlLogic";
import { FileListItemProps } from "@docsvision/webclient/BackOffice/FileListItemProps";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { RequestHelper } from "@docsvision/webclient/System/RequestHelper";
import React from "react";
import "@docsvision/webclient/Helpers/DragAndDrop/DraggableMobilePolyfill";
import { IFileMenuItem } from "@docsvision/webclient/BackOffice/IFileMenuItem";
/** @internal */
export declare class FileListItemComponent extends React.Component<FileListItemProps, any> {
    protected fileCommentWindowCloser: () => void;
    protected fileRenameWindowCloser: () => void;
    logic: FileListControlLogic;
    downloadAction: string;
    viewWithSigantureAction: string;
    versionsRequestHelper: RequestHelper;
    childVersionsLoaded: boolean;
    menuItems: any;
    constructor(props: FileListItemProps);
    componentWillUnmount(): void;
    canRead(fileItem: FileListItem): boolean;
    canEdit(fileItem: FileListItem): boolean;
    canDelete(fileItem: FileListItem): boolean;
    canLock(fileItem: FileListItem): boolean;
    canComment(fileItem: FileListItem): boolean;
    canRename(fileItem: FileListItem): boolean;
    canAddSignedFile(fileItem: FileListItem): boolean;
    protected onMenuClose(fileItem: FileListItem): void;
    onLockOperationClick(fileItem: FileListItem): void;
    onUnlockOperationClick(fileItem: FileListItem): void;
    onOpenFileClick(fileItem: FileListItem): Promise<void>;
    protected onDeleteOperationClick(fileItem: FileListItem): void;
    protected onFileMenuClick(fileItem: FileListItem): Promise<void>;
    protected onRowClick(fileItem: FileListItem): void;
    protected onDownloadOperationClick(fileItem: FileListItem): void;
    protected onViewWithSignaturesClick(fileItem: FileListItem): void;
    onAddCommentClick(fileItem: FileListItem): void;
    onEditModeRemoveClick(fileItem: FileListItem): void;
    render(): JSX.Element;
    protected getFileVersionText(version: GenModels.VersionedFileModel): string;
    fileVersionExpand(fileItem: FileListItem): void;
    onVersionClick(e: React.MouseEvent | null, fileItem: FileListItem): void;
    onNameClick: (fileItem: FileListItem) => void;
    protected onVersionNumberClick: (fileItem: FileListItem, version: GenModels.VersionedFileModel) => void;
    protected onDownloadVersionClick(fileItem: FileListItem, version: GenModels.VersionedFileModel): void;
    onWebDavFileClick(fileItem: FileListItem): Promise<void>;
    protected onDragStart(e: any): void;
    protected renderViewMode(): JSX.Element;
    protected renderVersionList(fileItem: FileListItem): JSX.Element;
    protected getLoaderWidth(i: number): number;
    protected renderEditMode(): JSX.Element;
    protected createMenuItemsList(fileItem: FileListItem): IFileMenuItem[];
    protected renderMenuItems(menuItems: any): any;
    onUploadSignedFileClick(e: React.MouseEvent, fileItem: FileListItem): void;
    onRenameFileClick(ev: any, fileItem: FileListItem): void;
    protected renderViewModeFileMenu(fileItem: FileListItem): JSX.Element;
    private makeToolTip;
}
