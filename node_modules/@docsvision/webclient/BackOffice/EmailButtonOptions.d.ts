import { EmailButtonLogic } from '@docsvision/webclient/BackOffice/EmailButtonLogic';
import { EmailButtonView } from '@docsvision/webclient/BackOffice/EmailButtonView';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { $FileDownload } from '@docsvision/webclient/Platform/$FileDownload';
import { $DeviceType } from '@docsvision/webclient/StandardServices';
import { BaseControlParams } from '@docsvision/webclient/System/BaseControl';
import { $CardId } from '@docsvision/webclient/System/LayoutServices';
import { $FileService } from '@docsvision/webclient/System/$FileService';
import { $LocalStorage } from '@docsvision/webclient/System/$LocalStorage';
import { IControlOptions } from '@docsvision/webclient/System/IControlOptions';
import { Optional } from '@docsvision/web/core/services';
/**
 * Содержит публичные свойства элемента управления [EmailButtonParams]{@link EmailButtonParams}.
 */
export declare class EmailButtonParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Текст кнопки операции. */
    buttonText?: string;
    /** Шаблон */
    transformationTemplate: string;
    /** Изменение выбора файлов */
    modifyFilesSelection?: boolean;
    /** Прикладываемые файлы */
    fileAttachments?: GenModels.FileAttachmentsMode;
    /** Использовать ссылку на карточку */
    useCardLink?: boolean;
    /** Использовать шаблон */
    useTemplate?: boolean;
    /** Сервисы */
    services?: Optional<$EmailButtonOptions> & $FileDownload & $CardId & $FileService & $LocalStorage & $DeviceType;
}
export declare type $EmailButtonOptions = {
    emailButtonOptions: IControlOptions<EmailButtonParams, EmailButtonLogic, EmailButtonView>;
};
export declare const $EmailButtonOptions: string | ((model?: $EmailButtonOptions) => IControlOptions<EmailButtonParams, EmailButtonLogic, EmailButtonView>);
