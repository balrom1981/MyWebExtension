import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { IDynamicTreeNodeData } from "@docsvision/webclient/Helpers/DynamicTree/IDynamicTreeNodeData";
import { ITreeNodeData } from "@docsvision/webclient/Helpers/Tree/Data/ClientModels/ITreeNodeData";
import React from 'react';

/** @internal */
export declare class DirectoryDesignerTreeNode implements IDynamicTreeNodeData {
    mData: GenModels.DirectoryDesignerTreeNode & {
        useDescription: boolean;
    };
    mChildren: DirectoryDesignerTreeNode[];
    mName: React.ReactNode;
    static Create(data: GenModels.DirectoryDesignerTreeNode, sort?: boolean, useDescription?: boolean): DirectoryDesignerTreeNode;
    static CreateMany(dataArray: GenModels.DirectoryDesignerTreeNode[], sort?: boolean, useDescription?: boolean): DirectoryDesignerTreeNode[];
    get data(): GenModels.DirectoryDesignerTreeNode;
    get displayName(): React.ReactNode;
    set displayName(val: React.ReactNode);
    get uniqueId(): string;
    get iconClass(): string;
    get children(): ITreeNodeData[];
    expandedByDefault: boolean;
    get childrenLoaded(): boolean;
    set childrenLoaded(val: boolean);
    get disabled(): boolean;
}
