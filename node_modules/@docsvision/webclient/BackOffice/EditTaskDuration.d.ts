import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { StateAccessor } from '@docsvision/webclient/System/StateAccessor';
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
import { $ApplicationSettings, $DeviceType } from '@docsvision/webclient/StandardServices';
import { TaskGroupInterval } from '@docsvision/webclient/BackOffice/TaskGroupIntervalModel';
import { ITaskDurationDialogManagement } from '@docsvision/webclient/BackOffice/ITaskDurationDialogManagement';
import { Optional } from '@docsvision/web/core/services';
import { $RootCssClass } from '@docsvision/webclient/Helpers/$RootCssClass';
export declare class EditTaskDuration {
    private onTaskDurationChanged;
    private useBusinessCalendar;
    private getBusinessCalendarSources;
    private executionType;
    private taskGroupDurationSpecified;
    private services;
    constructor(onTaskDurationChanged: (task: TaskGroupInterval, startDate: Date, endDate: Date, duration: number) => void, useBusinessCalendar: () => boolean, getBusinessCalendarSources: (task: TaskGroupInterval) => GenModels.BusinessCalendarSource[], executionType: StateAccessor<GenModels.ExecutionType>, taskGroupDurationSpecified: () => boolean, services: $MessageBox & $ApplicationSettings & Optional<$RootCssClass> & $DeviceType);
    showEditDialog: (task: TaskGroupInterval) => Promise<ITaskDurationDialogManagement>;
}
