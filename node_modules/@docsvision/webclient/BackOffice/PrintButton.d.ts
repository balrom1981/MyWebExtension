/// <reference types="react" />
import { PrintButtonLogic } from "@docsvision/webclient/BackOffice/PrintButtonLogic";
import { PrintButtonView } from "@docsvision/webclient/BackOffice/PrintButtonView";
import { $AvailableTemplatesController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $SiteUrl } from "@docsvision/webclient/StandardServices";
import { BaseControl, BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { BaseControlImplState } from "@docsvision/webclient/System/BaseControlImpl";
import { ControlImpl } from "@docsvision/webclient/System/ControlImpl";
import { $CardId } from "@docsvision/webclient/System/LayoutServices";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { Optional } from "@docsvision/web/core/services";
export declare class PrintButtonParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Текст кнопки операции. */
    labelText?: string;
    /** Список шаблонов */
    availableTemplates: GenModels.TransformationDataModel[];
    /** Сервисы */
    services?: $AvailableTemplatesController & $CardId & Optional<$PrintButtonOptions> & $SiteUrl;
}
export interface PrintButtonState extends BaseControlImplState, PrintButtonParams {
    logic: PrintButtonLogic;
    view: PrintButtonView;
}
/** Сервис для переопределения реализации PrintButton */
export interface IPrintButtonOptions {
    getPrintButtonView(params: PrintButtonParams): PrintButtonView;
    getPrintButtonLogic(params: PrintButtonParams): PrintButtonLogic;
}
export declare type $PrintButtonOptions = {
    printButtonOptions: IPrintButtonOptions;
};
export declare const $PrintButtonOptions: string | ((model?: $PrintButtonOptions) => IPrintButtonOptions);
/**
 * Класс элемента управления PrintButton.
 */
export declare class PrintButton extends BaseControl<PrintButtonParams, PrintButtonState> {
    construct(): void;
    /** @internal */
    protected set availableTemplatesLoader(binding: IBindingResult<GenModels.TransformationDataModel[]>);
    set availableTemplatesChanged(val: any);
    /** @notest @internal */
    protected createParams(): PrintButtonParams;
    protected createImpl(): ControlImpl;
    renderControl(): JSX.Element;
}
