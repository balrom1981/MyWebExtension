import { DirectorySearchFilters } from "@docsvision/webclient/BackOffice/DirectorySearchFilters";
import { NomenclatureSearchFilters } from "@docsvision/webclient/BackOffice/Index";
export declare type SearchFilters = DirectorySearchFilters | NomenclatureSearchFilters;
export interface ISearchFilterEntry {
    key: SearchFilters;
    value: string;
}
export interface IDirectorySearchInfo {
    directoryTypeId: string;
    searchFilters: Array<ISearchFilterEntry>;
    getSearchPlaceholder: (searchFilterKey: SearchFilters) => string;
}
interface IDirectorySearchInfoMap {
    [directoryTypeId: string]: IDirectorySearchInfo;
}
export interface IWebFrameDirectorySearchInfoStorageService {
    register: (directorySearchInfo: IDirectorySearchInfo) => void;
    get: (directoryTypeId: string) => IDirectorySearchInfo;
}
export declare class WebFrameDirectorySearchInfoStorageService implements IWebFrameDirectorySearchInfoStorageService {
    directorySearchInfos: IDirectorySearchInfoMap;
    register: (directorySearchInfo: IDirectorySearchInfo) => void;
    get: (directoryTypeId: string) => IDirectorySearchInfo;
}
export declare type $WebFrameDirectorySearchInfoStorageService = {
    webFrameDirectorySearchInfoStorageService: IWebFrameDirectorySearchInfoStorageService;
};
export declare const $WebFrameDirectorySearchInfoStorageService: string | ((model?: $WebFrameDirectorySearchInfoStorageService) => IWebFrameDirectorySearchInfoStorageService);
export {};
