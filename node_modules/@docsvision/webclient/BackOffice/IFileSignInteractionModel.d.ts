import { $LayoutDocumentController, $SignatureController, $SignatureMethodsController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { $DocumentCardController } from "@docsvision/webclient/Legacy/DocumentCard";
import { IFileSignInfo } from "@docsvision/webclient/Legacy/IFileSingInfo";
import { $CloudSignature } from "@docsvision/webclient/BackOffice/$CloudSignature";
import { $ApplicationSettings, $WebViewIOSEnabled } from "@docsvision/webclient/StandardServices";
import { $RequestManager } from "@docsvision/webclient/System/$RequestManager";
import { Optional } from "@docsvision/web/core/services";
import { $CryptoPro } from "@docsvision/webclient/BackOffice/$CryptoPro";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { $MessageBox } from "@docsvision/webclient/System/$MessageBox";
import { $CardInfo } from "@docsvision/webclient/System/LayoutServices";
export interface IFileSignInteractionModel {
    documentId: string;
    getFiles: () => IFileSignInfo[];
    signButton: HTMLElement;
    viewSignButton: HTMLElement;
    doNotShowSignatureCompleteMessage?: boolean;
    beforeShowSignDialogCallback: () => Promise<any>;
    beforeSignCallback: () => Promise<any>;
    beforeViewSignCallback: () => Promise<any>;
    afterSignCallback: Function;
    afterViewSignCallback: Function;
    services: $DocumentCardController & $LayoutDocumentController & Optional<$WebViewIOSEnabled> & $CloudSignature & $CryptoPro & $ApplicationSettings & $RequestManager & $WebViewIOSEnabled & $SignatureController & $LocalStorage & $SignatureMethodsController & $MessageBox & $CardInfo;
}
