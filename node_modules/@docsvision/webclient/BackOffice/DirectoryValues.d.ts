/// <reference types="react" />
import { IComponentProps } from '@docsvision/web/core/component';
import { DirectoryValuesLogic } from "@docsvision/webclient/BackOffice/DirectoryValuesLogic";
import { IRow, ITableData, ITablePlugins } from "@docsvision/web/components/table/interfaces";
import { ITableDataServiceOptions } from "@docsvision/web/components/table/plugins/table-data";
import { TableCompositionProps } from "@docsvision/web/components/table/main";
import { DirectoryValuesWrapper } from "@docsvision/webclient/BackOffice/DirectoryValuesWrapper";
import { DirectoryValuesContainer } from "@docsvision/webclient/BackOffice/DirectoryValuesContainer";
import { DirectoryValuesIcon } from "@docsvision/webclient/BackOffice/DirectoryValuesIcon";
import { DirectoryValuesLoading } from "@docsvision/webclient/BackOffice/DirectoryValuesLoading";
import { DirectoryValuesAddButton } from "@docsvision/webclient/BackOffice/DirectoryValuesAddButton";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { $ContextMenuOptions } from "@docsvision/webclient/Platform/$ContextMenuOptions";
import { Optional } from "@docsvision/web/core/services";
import { $ApplicationSettings } from "@docsvision/webclient/StandardServices";
import { $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { IDirectoryTreeRow } from "@docsvision/webclient/BackOffice/IDirectoryTreeRow";
import { $SelectionRow } from "@docsvision/webclient/BackOffice/$SelectionRow";
/** @internal */
export interface DirectoryValuesProps extends Omit<TableCompositionProps, "data">, IComponentProps<DirectoryValuesLogic, DirectoryValuesView> {
    section: IDirectoryTreeRow;
    dataLoad: ITableDataServiceOptions;
    data: ITableData;
    loading: boolean;
    plugins?: ITablePlugins[];
    loadingRows?: IRow[];
    iconClass?: string;
    onAddValueClick?: () => void;
    selectedEntityId?: string;
    showAddButton?: boolean;
    addButtonTitle?: string;
    placeholderText?: string;
    services?: $LocalStorage & $ApplicationSettings & $LayoutInfo & $EditOperationStore & Optional<$ContextMenuOptions> & Optional<$SelectionRow>;
}
/** @internal */
export declare class DirectoryValuesView {
    wrapper: typeof DirectoryValuesWrapper;
    container: typeof DirectoryValuesContainer;
    valuesAddButton: typeof DirectoryValuesAddButton;
    composition: (props: TableCompositionProps) => JSX.Element;
    rowIcon: typeof DirectoryValuesIcon;
    loadingView: typeof DirectoryValuesLoading;
}
/** @internal */
export declare const DirectoryValues: (props: DirectoryValuesProps) => JSX.Element;
