import { MultipleEmployeesImpl, MultipleEmployeesState } from "@docsvision/webclient/BackOffice/MultipleEmployeesImpl";
import { $EmployeeController, $LayoutStaffController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { InputBasedControl, InputBasedControlParams } from "@docsvision/webclient/System/InputBasedControl";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { $CardInfo, $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { BasicApiEvent, CancelableApiEvent } from "@docsvision/webclient/System/ApiEvent";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { $LabelWidth } from '@docsvision/webclient/System/$LabelWidth';
import { Optional } from '@docsvision/web/core/services';
/**
 * Содержит публичные свойства элемента управления [Сотрудники]{@link MultipleEmployees}.
 */
export declare class MultipleEmployeesParams extends InputBasedControlParams<GenModels.EmployeeDataModel[]> {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Массив выбранных сотрудников. */
    value?: GenModels.EmployeeDataModel[];
    /** Формат отображения во всплывающей подсказке информации о выбранном сотруднике. */
    tipMode?: GenModels.PartnerTipModeItems;
    /**
     * Флаг, указывающий, что при быстром поиске последние выбранные сотрудники должны отображаться в начале списка:
     * true - отображать сначала последних выбранных, false - обычный порядок отображения сотрудников.
     */
    supportFavorites?: boolean;
    /**
     * Флаг, указывающий, что при быстром поиске 10 последних из профиля пользователя должны отображаться в начале списка (актуально для Заданий и ГЗ):
     * true - отображать сначала последних выбранных, false - обычный порядок отображения сотрудников.
     */
    usePerformers?: boolean;
    /** Идентификатор подразделения, из которого можно выбирать сотрудников. Если значение не указано, то можно выбирать из любого подразделения. */
    restrictUnitId?: string;
    /** Список последних выбранных в элементе управления сотрудников. */
    favoriteMultipleEmployees?: GenModels.EmployeeDataModel[];
    /**
     * Флаг, определяющий формат отображения выбранных сотрудников в элементе управления:
     * true - выбранные сотрудники отображаются в виде вертикального списка; false - в виде горизонтального списка.
     */
    verticalOrientation?: boolean;
    /** Путь к полю карточки с идентификатором сотрудника. */
    fieldPath?: string;
    /** Флаг, указывающий, скрыты ли выбранные исполнители */
    hideChosenEmployees?: boolean;
    /** События возникает при добавлении сотрудника. */
    addingEmployee?: CancelableApiEvent<GenModels.EmployeeDataModel>;
    /** События возникает после добавления сотрудника. */
    addedEmployee?: BasicApiEvent<GenModels.EmployeeDataModel>;
    /** События возникает при удалении сотрудника из списка. */
    removingEmployee?: CancelableApiEvent<GenModels.EmployeeDataModel>;
    /** События возникает после удаления сотрудника из списка. */
    removedEmployee?: BasicApiEvent<GenModels.EmployeeDataModel>;
    filterMode?: GenModels.EmployeeFilterMode;
    services?: $LayoutStaffController & $EditOperationStore & $Layout & $LayoutInfo & $CardInfo & $LocalStorage & $EmployeeController & Optional<$LabelWidth>;
}
/**
 * Класс элемента управления Сотрудники.
 *
 * Добавляет в web-разметку поле ввода с кнопкой вызова диалогового окна для выбора нескольких сотрудников из *Справочника сотрудников*.
 */
export declare class MultipleEmployees extends InputBasedControl<GenModels.EmployeeDataModel[], MultipleEmployeesParams, MultipleEmployeesState> {
    protected createParams(): MultipleEmployeesParams;
    private get multipleEmployeeImpl();
    protected getServices(): $LayoutStaffController & $EditOperationStore & $Layout & $LayoutInfo & $CardInfo & $LocalStorage & $EmployeeController & Partial<$LabelWidth>;
    private set employeeBinding(value);
    private set defaultMultipleEmployeesBinding(value);
    /** Добавление ограничения выбора исполнителей по указанному подразделению/организации. */
    get restrictUnitId(): string;
    set restrictUnitId(id: string);
    /** Установка всплывающей подсказки. */
    set tipMode(val: any);
    /** Установка вспомогательных исполнителей. */
    set supportFavorites(val: boolean);
    get supportFavorites(): boolean;
    /** Установка использующихся исполнителей. */
    set usePerformers(val: any);
    /** Получение избранных исполнителей. */
    get favoriteEmployees(): GenModels.EmployeeDataModel[];
    /** Установка избранных исполнителей. */
    set favoriteEmployees(val: GenModels.EmployeeDataModel[]);
    /**
     * Добавляет указанного сотрудника в список последних выбранных.
     * @param item Добавляемый сотрудник.
     */
    addToFavorite(item: GenModels.EmployeeDataModel): void;
    onSaved(): Promise<void>;
    protected getBindings(): IBindingResult<any>[];
    /** @internal */
    protected createImpl(): MultipleEmployeesImpl;
}
