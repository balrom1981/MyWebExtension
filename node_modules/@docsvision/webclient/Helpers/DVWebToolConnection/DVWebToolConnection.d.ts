import { $WebServices } from '@docsvision/webclient/System/IWebServicesService';
import { $ApplicationSettings } from '@docsvision/webclient/StandardServices';
import { IWebServicesRequest } from '@docsvision/webclient/System/IWebServicesRequest';
import { IWebServicesConnection } from '@docsvision/webclient/System/IWebServicesConnection';
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
export declare class DVWebToolConnection {
    private static WebToolInstalledOptionsKey;
    private static dvWebToolOpenCommand;
    private static delayTime;
    static cancel: boolean;
    static trySendData<RequestT, ResponseT>(webService: string, data: IWebServicesRequest<RequestT>, services: $WebServices & $ApplicationSettings & $MessageBox): Promise<ResponseT>;
    static trySendDataEx<RequestT, ResponseT>(webService: string, data: IWebServicesRequest<RequestT>, services: $WebServices & $ApplicationSettings & $MessageBox, maxTryCount?: number): Promise<ResponseT>;
    static tryConnect<RequestT, ResponseT>(webService: string, services: $WebServices & $ApplicationSettings & $MessageBox): Promise<IWebServicesConnection>;
    static tryConnectEx<RequestT, ResponseT>(webService: string, services: $WebServices & $ApplicationSettings & $MessageBox, maxTryCount?: number): Promise<IWebServicesConnection>;
    static renderModalWindow(container: HTMLElement, services: $WebServices & $ApplicationSettings & $MessageBox): Promise<void>;
}
