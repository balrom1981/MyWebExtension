import React from "react";
/** @internal Свойства для {@link ComboBoxElement} */
export interface IComboBoxElementProps {
    /** Дополнительный класс */
    className?: string;
    /** Включен ли TabIndex у элемента */
    tabIndex?: boolean;
    /** Выключен ли элемент */
    disabled?: boolean;
    /** Выбран ли элемент */
    selected?: boolean;
    /** Имеет ли элемент фокус в данный момент */
    focused?: boolean;
    /** При нажатии на элемент */
    onMouseDown?: Function;
    /** При выборе элемента */
    onSelect?: () => void;
    /** При фокусе элемента */
    onFocus?: (event: React.FocusEvent<any>) => void;
    /** При снятии фокуса элемента */
    onBlur?: (event: React.FocusEvent<any>) => void;
    /** При передачи фокуса следующему элементу */
    onFocusNext?: () => void;
    /** При передачи фокуса предыдущему элементу */
    onFocusPrev?: () => void;
    /** Идентификатор */
    id?: string;
    /** Числовой код элемента в списке */
    code?: number;
}
/**
 * @internal Элемент выпадающего списка комбобокса.
 * Пример использования см. в {@link ComboBoxWrapper}
 */
export declare class ComboBoxElement extends React.Component<IComboBoxElementProps, undefined> {
    /**
     * Узел элемента
     */
    el: HTMLElement;
    componentDidMount(): void;
    UNSAFE_componentWillReceiveProps(nextProps: IComboBoxElementProps): void;
    /**
     * При выборе элемента
     */
    protected onSelect: () => void;
    protected onKeyDown: (e: React.KeyboardEvent<any>) => void;
    get tabIndex(): -1 | 0;
    /**
     * Фокусирует элемент
     */
    focus: () => void;
    private onMouseDown;
    render(): JSX.Element;
}
