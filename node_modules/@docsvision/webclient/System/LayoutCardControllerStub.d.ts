import { GenControllers } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { RequestOptions } from '@docsvision/webclient/Legacy/Utils';
export declare class LayoutCardControllerStub implements GenControllers.ILayoutCardController {
    viewEx(request: GenModels.ViewCardLayoutRequest, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    editEx(request: GenModels.EditCardLayoutRequest, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    newCard(createParams: GenModels.LayoutCardCreateParams, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    view(cardId: string, layoutMode: string, refresh?: boolean, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    edit(cardId: string, layoutMode: string, refresh?: boolean, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    delete(deleteCardRequestModel: GenModels.DeleteCardRequestModel, options?: RequestOptions): Promise<string>;
    getLayout(cardLayoutParams: GenModels.CardLayoutParams, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    getLayoutPart(layoutPartParams: GenModels.LayoutPartParams, options?: RequestOptions): Promise<GenModels.LayoutModel>;
    save(model: GenModels.SaveControlDataModel, options?: RequestOptions): Promise<void>;
    checkModifiedAndLocked(cardId: string, timestamp: number, options?: RequestOptions): Promise<void>;
    changeState(changeStateDataModel: GenModels.ChangeStateDataModelWithParams, options?: RequestOptions): Promise<GenModels.LayoutCardViewModel>;
    changeStateEx(changeStateDataModel: GenModels.ChangeStateDataModel, options?: RequestOptions): Promise<void>;
    checkAccess(cardId: string, options?: RequestOptions): Promise<boolean>;
    moveShortcutsToFolder(request: GenModels.MoveOrCopyShortcutsToFolderRequest, options?: RequestOptions): Promise<string>;
    copyShortcutsToFolder(request: GenModels.MoveOrCopyShortcutsToFolderRequest, options?: RequestOptions): Promise<any>;
    removeShortcutsFromFolder(folderId: string, cardId: string, options?: RequestOptions): Promise<any>;
}
