import { BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { BaseControlImpl, BaseControlImplState } from "@docsvision/webclient/System/BaseControlImpl";
import React from 'react';
export interface ICreateControlParameters {
    props: BaseControlParams;
    state: BaseControlImplState;
    render?: () => React.ReactNode;
    disable?: () => React.ReactNode;
    addCssClass?: () => string;
    isContent?: () => boolean;
}
export declare class ControlImpl extends BaseControlImpl<BaseControlParams, BaseControlImplState> {
    private renderControlFunction?;
    private renderDisabledControlFunction?;
    private addCssClass;
    private isContent;
    constructor(props: BaseControlParams, state?: BaseControlImplState, renderControlFunction?: () => React.ReactNode, renderDisabledControlFunction?: () => React.ReactNode);
    get isControlImpl(): boolean;
    static createControl(parameters: ICreateControlParameters): ControlImpl;
    addCustomParameters: (addCssClass: () => string, isContent: () => boolean) => void;
    getCssClass(): string;
    hasContent(): boolean;
    renderControl(): React.ReactNode;
    renderDisabledControl(): React.ReactNode;
}
