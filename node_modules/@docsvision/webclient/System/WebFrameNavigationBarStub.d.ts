export declare const buttons: {
    children: any[];
    controlTypeName: string;
    isAsync: any;
    properties: {
        bindingEditOperation: {
            name: string;
            metadata: any[];
            values: any[];
            value: any;
            editOperation: string;
        };
        blur: string;
        click: string;
        disabled: boolean;
        focus: string;
        isInheritedEditOperation: boolean;
        mouseOut: string;
        mouseOver: string;
        name: string;
        primary: boolean;
        standardCssClass: string;
        stretchWidth: boolean;
        tabStop: boolean;
        tag: string;
        text: string;
        tip: string;
        visibility: boolean;
    };
}[];
export declare const textBoxes: {
    controlTypeName: string;
    isAsync: any;
    properties: {
        tag: string;
        name: string;
        placeHolder: string;
        tip: string;
        labelText: string;
        showEmptyLabel: boolean;
        visibility: boolean;
        visibilityEditOperation: string;
        standardCssClass: string;
        tabStop: boolean;
        required: boolean;
        editMode: number;
        extendedDataSource: string;
        binding: {
            name: string;
            metadata: any[];
            values: any[];
            value: string;
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        isInheritedEditOperation: boolean;
        disabled: boolean;
        trimValue: boolean;
        click: string;
        mouseOver: string;
        mouseOut: string;
        focus: string;
        blur: string;
        dataChanged: string;
        inPlaceEditOpeninig: string;
        inPlaceEditOpened: string;
        inPlaceEditClosinig: string;
        inPlaceEditClosed: string;
    };
    children: any[];
}[];
export declare const labels: {
    controlTypeName: string;
    isAsync: any;
    properties: {
        tag: string;
        name: string;
        text: string;
        standardCssClass: string;
        visibility: boolean;
        click: string;
        mouseOver: string;
        mouseOut: string;
    };
    children: any[];
}[];
export declare const numbers: {
    controlTypeName: string;
    isAsync: any;
    properties: {
        name: string;
        tag: string;
        placeHolder: string;
        labelText: string;
        showEmptyLabel: boolean;
        visibility: boolean;
        extendedDataSource: string;
        standardCssClass: string;
        fractionDigits: number;
        tabStop: boolean;
        binding: {
            name: string;
            metadata: any[];
            values: any[];
            value: string;
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        isInheritedEditOperation: boolean;
        disabled: boolean;
        required: boolean;
        editMode: number;
        click: string;
        mouseOver: string;
        focus: string;
        blur: string;
        mouseOut: string;
        dataChanged: string;
        inPlaceEditOpening: string;
        inPlaceEditOpened: string;
        inPlaceEditClosing: string;
        inPlaceEditClosed: string;
    };
    children: any[];
}[];
export declare const urls: {
    controlTypeName: string;
    isAsync: any;
    properties: {
        tag: string;
        name: string;
        visibility: boolean;
        visibilityEditOperation: string;
        standardCssClass: string;
        tabStop: boolean;
        externalUrl: string;
        text: string;
        extendedDataSource: string;
        binding: {
            name: string;
            metadata: any[];
            values: any[];
            value: string;
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        openMode: number;
        urlProtocol: string;
        click: string;
        mouseOver: string;
        mouseOut: string;
    };
    children: any[];
}[];
export declare const dropdowns: {
    controlTypeName: string;
    isAsync: any;
    properties: {
        tag: string;
        name: string;
        placeHolder: string;
        showEmptyLabel: boolean;
        labelText: string;
        extendedDataSource: string;
        binding: {
            name: string;
            metadata: {
                key: string;
                value: string;
            }[];
            values: any[];
            value: string;
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        defaultElement: string;
        elements: {
            name: string;
            metadata: any[];
            values: any[];
            value: {
                elements: {
                    key: string;
                    value: string;
                    valueCode: number;
                }[];
                isEmptyKeyAllowed: boolean;
            };
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        isInheritedEditOperation: boolean;
        disabled: boolean;
        visibility: boolean;
        standardCssClass: string;
        tabStop: boolean;
        required: boolean;
        editMode: number;
        click: string;
        mouseOver: string;
        mouseOut: string;
        focus: string;
        blur: string;
        dataChanged: string;
        inPlaceEditOpeninig: string;
        inPlaceEditOpened: string;
        inPlaceEditClosinig: string;
        inPlaceEditClosed: string;
        collapsed: string;
        collapsing: string;
        expanded: string;
        expanding: string;
    };
    children: any[];
}[];
export declare const radioGroups: {
    controlTypeName: string;
    isAsync: any;
    properties: {
        tag: string;
        name: string;
        tip: string;
        labelText: string;
        columnCount: number;
        showEmptyLabel: boolean;
        extendedDataSource: string;
        binding: {
            name: string;
            metadata: any[];
            values: any[];
            value: string;
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        elements: {
            name: string;
            metadata: any[];
            values: any[];
            value: {
                elements: {
                    key: string;
                    value: string;
                }[];
                isEmptyKeyAllowed: boolean;
            };
            editOperation: string;
            extendedDataSourceCardId: any;
            extendedDataSourceSectionId: any;
            extendedDataSourceRowId: any;
        };
        labelPlacement: number;
        isInheritedEditOperation: boolean;
        disabled: boolean;
        visibility: boolean;
        tabStop: boolean;
        editMode: number;
        standardCssClass: string;
        required: boolean;
        click: string;
        mouseOver: string;
        mouseOut: string;
        focus: string;
        blur: string;
        dataChanged: string;
        inPlaceEditOpeninig: string;
        inPlaceEditOpened: string;
        inPlaceEditClosinig: string;
        inPlaceEditClosed: string;
    };
    children: any[];
}[];
