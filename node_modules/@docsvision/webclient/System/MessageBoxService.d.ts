/// <reference types="react" />
import { IMessageBoxService, MessageBoxButton } from '@docsvision/webclient/System/$MessageBox';
import { BodyContainerProvider } from '@docsvision/webclient/Helpers/BodyContainerProvider';
/** Сервис для работы с модальным окном. {@link IMessageBoxService} */
export declare class MessageBoxService implements IMessageBoxService {
    /** Показывает модальное окно с сообщением об ошибке. */
    showError(content: React.ReactNode, customCaptionText?: React.ReactNode): Promise<void>;
    /** Показывает модальное окно с информационным сообщением. */
    showInfo(content: React.ReactNode, customCaptionText?: React.ReactNode): Promise<void>;
    /** Показывает модальное окно с предупреждением. */
    showWarning(content: React.ReactNode, customCaptionText?: React.ReactNode): Promise<void>;
    /** Показывает модальное окно с запросом подтвердить какое-либо действие. */
    showConfirmation(content: React.ReactNode, customCaptionText?: React.ReactNode, customButtonOkText?: React.ReactNode, customButtonCancelText?: React.ReactNode): Promise<void>;
    showCustom<T>(content: React.ReactNode, customCaptionText: React.ReactNode, buttons: MessageBoxButton<T>[]): Promise<T>;
    /** Вовращает DOM-контейнер для показа специфичных информационных модальных окон. */
    getMessageBoxContainer(): BodyContainerProvider;
}
