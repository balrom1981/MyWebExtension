export interface ITabSelectionStyle {
    property?: string;
    focusValue?: string;
    defaultValue?: string;
}
export interface ITabSelectionOptions {
    styles: ITabSelectionStyle[];
    useClass?: boolean;
    useWrapper?: boolean;
}
export interface IHandlerTabSelection {
    handlers: Array<(e: Event) => void>;
    element: HTMLElement;
    init(options: ITabSelectionOptions): void;
    destroy(): void;
}
export declare class HandleTabSelection implements IHandlerTabSelection {
    handlers: any[];
    element: any;
    private styles;
    private wrapper;
    private MOUSEDOWN_EVENT;
    private FOCUS_EVENT;
    private FOCUSOUT_EVENT;
    private isClickEvent;
    private handleMouseDown;
    private handleFocus;
    private handleFocusOut;
    private useClass;
    private useWrapper;
    constructor(element: HTMLElement);
    init({ styles, useClass, useWrapper }: ITabSelectionOptions): void;
    destroy(): void;
}
