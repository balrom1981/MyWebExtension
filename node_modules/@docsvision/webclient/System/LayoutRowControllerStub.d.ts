import { GenControllers } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { RequestOptions } from '@docsvision/webclient/Legacy/Utils';
export declare class LayoutRowControllerStub implements GenControllers.ILayoutRowController {
    exist(layoutParams: GenModels.RowLayoutParams, options?: RequestOptions): Promise<boolean>;
    newRow(createParams: GenModels.LayoutRowCreateParams, options?: RequestOptions): Promise<GenModels.LayoutRowViewModel>;
    view(layoutParams: GenModels.RowLayoutParams, options?: RequestOptions): Promise<GenModels.LayoutRowViewModel>;
    edit(layoutParams: GenModels.RowLayoutParams, options?: RequestOptions): Promise<GenModels.LayoutRowViewModel>;
    delete(row: GenModels.DeleteRowModel, options?: RequestOptions): Promise<void>;
    getLayoutPart(layoutPartParams: GenModels.RowLayoutPartParams, options?: RequestOptions): Promise<GenModels.LayoutModel>;
    save(model: GenModels.SaveRowControlDataModel, options?: RequestOptions): Promise<void>;
    checkModifiedAndLocked(cardId: string, sectionId: string, rowId: string, timestamp: number, options?: RequestOptions): Promise<void>;
    checkAccess(cardId: string, sectionId: string, rowId: string, options?: RequestOptions): Promise<boolean>;
}
