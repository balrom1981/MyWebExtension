import { $LayoutUserSettingsController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { $CacheManagement } from "@docsvision/webclient/Platform/$CacheManagement";
import { $ApplicationSettings, $DeviceType } from "@docsvision/webclient/StandardServices";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { IPoll } from "@docsvision/webclient/System/$PollService";
import { $MessageWindow } from "@docsvision/web/components/modals/message-box";
import { $Resources } from "@docsvision/web/core/localization/$Resources";
import { $Domain } from "@docsvision/web/core/state-management";
import { Store, Event } from "effector";

export declare enum PollStatus {
    Done = 0,
    Next = 1
}
export declare type TPollServices = $ApplicationSettings & $Domain & $LayoutUserSettingsController & $LocalStorage & $Resources & $MessageWindow & $CacheManagement & $DeviceType;
export declare class PollService implements IPoll {
    private services;
    $URL: Store<string>;
    $nextPollDate: Store<Date>;
    setNextPollDate: Event<Date>;
    constructor(services: TPollServices);
    checkNotificationDisplay: () => Promise<void>;
    private updateStatus;
    private take;
    private nextTime;
    private notification;
    show: () => Promise<void>;
}
