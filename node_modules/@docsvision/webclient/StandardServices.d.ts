import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $FolderViews } from "@docsvision/webclient/Legacy/$FolderViews";
import { $NavBar } from "@docsvision/webclient/Legacy/$NavBar";
import { $SearchPanel } from "@docsvision/webclient/Legacy/$SearchPanel";
import { $Folders } from "@docsvision/webclient/Legacy/$Folders";
import { $Sidebar } from "@docsvision/webclient/Legacy/$Sidebar";
import { $UserMenu } from "@docsvision/webclient/Legacy/$UserMenu";
import { $FileDownload } from '@docsvision/webclient/Platform/$FileDownload';
import { $WindowLocation } from '@docsvision/webclient/Platform/$WindowLocation';
import { $FilePickerUpload } from '@docsvision/webclient/Platform/IFilePickerUploadService';
import { $WebFrameContext } from '@docsvision/webclient/Platform/$WebFrameContext';
import { $InsideMainMenu } from '@docsvision/webclient/Platform/$InsideMainMenu';
import { $BatchOperationsPerformer } from '@docsvision/webclient/Platform/$BatchOperationsPerformer';
import { $BatchOperationsProgressDialog } from '@docsvision/webclient/Platform/$BatchOperationsProgressDialog';
import { $UnreadCounter } from "@docsvision/webclient/Platform/$UnreadCounter";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { $CardId, $CardInfo, $CardTimestamp, $ControlStore, $EditOperationStore, $ExtendedDataSourceInfos, $LayoutInfo, $OwnerLayout, $RowId, $RowInfo } from "@docsvision/webclient/System/LayoutServices";
import { $LayoutControlFactory } from "@docsvision/webclient/System/$LayoutControlFactory";
import { $ExtensionManager } from '@docsvision/webclient/System/IExtensionManager';
import { $RequestManager } from "@docsvision/webclient/System/$RequestManager";
import { $UrlResolver } from '@docsvision/webclient/System/$UrlResolver';
import { $UrlStore } from "@docsvision/webclient/System/$UrlStore";
import { $LayoutManager } from "@docsvision/webclient/System/$LayoutManager";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
import { $Router, $RouterNavigation } from "@docsvision/webclient/System/$Router";
import { $Timeout } from '@docsvision/webclient/System/$Timeout';
import { $RealtimeCommunicationService } from "@docsvision/webclient/System/$RealtimeCommunicationService";
import { $WebServices } from '@docsvision/webclient/System/IWebServicesService';
import { $ExperimentalFeature } from '@docsvision/webclient/System/$ExperimentalFeature';
import { $UnreadCounterNotification } from '@docsvision/webclient/Platform/$UnreadCounterNotification';
import { $EmployeeStatus } from '@docsvision/webclient/Platform/$EmployeeStatus';
import { $CacheManagement } from '@docsvision/webclient/Platform/$CacheManagement';
import { $FileScan } from '@docsvision/webclient/Platform/$FileScan';
import { $LayoutCheck } from '@docsvision/webclient/System/$LayoutCheckService';
import { $ScanDialog } from '@docsvision/webclient/Platform/$ScanDialog';
import { $FileService } from '@docsvision/webclient/System/$FileService';
import { $ApprovalPathVisualizationController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { $CompanyLogo } from '@docsvision/webclient/Platform/$CompanyLogo';
import { $ContentElementProvider } from '@docsvision/webclient/Platform/$ContentElementProvider';
import { $RootCssClass } from '@docsvision/webclient/Helpers/$RootCssClass';
import { $FilePreview } from '@docsvision/webclient/Platform/$FilePreview';
import { $WebFrameDirectorySearchPanelService } from "@docsvision/webclient/BackOffice/$WebFrameDirectorySearchPanelService";
import { $Domain } from '@docsvision/web/core/state-management';
import { $Resources } from "@docsvision/web/core/localization/$Resources";
import { $MessageWindow } from '@docsvision/web/components/modals/message-box';
import { $FileUpload } from "@docsvision/webclient/Platform/IFileUploadService";
import { $WebFrameDirectorySearchInfoStorageService } from "@docsvision/webclient/BackOffice/$WebFrameDirectorySearchInfoStorageService";
import { $DialogManagement } from "@docsvision/webclient/Helpers/ModalDialog/$DialogManagement";
import { $WebFrameSearchPanel } from "@docsvision/webclient/Platform/$WebFrameSearchPanel";
import { $LastSearchResponse } from "@docsvision/webclient/System/$LastSearchResponse";
import { $RefreshUnreadCounters } from "@docsvision/webclient/Platform/$RefreshUnreadCounters";
import { $CurrentFolder } from "@docsvision/webclient/Platform/$CurrentFolder";
import { $CloudSignature } from "@docsvision/webclient/BackOffice/$CloudSignature";
import { $CryptoPro } from "@docsvision/webclient/BackOffice/$CryptoPro";
import { $LastSearchParameters } from "@docsvision/webclient/Platform/$LastSearchParameters";
import { $Poll } from "@docsvision/webclient/System/$PollService";
import { $FolderPluginProvider } from "@docsvision/webclient/Platform/$FolderPluginProvider";
import { $LayoutBackground } from "@docsvision/webclient/System/$LayoutBackground";
import { $HoverPanel } from "@docsvision/webclient/Platform/$HoverPanel";
import { $WebFrameContentHeight } from "@docsvision/webclient/System/$WebFrameContentHeight";
import { $DigitalSignature } from "@docsvision/webclient/BackOffice/$DigitalSignature";
import { $FolderColors } from "@docsvision/webclient/System/$FolderColors";
/** Сервис доступа к идентификатору текущего пользователя. */
export declare type $CurrentEmployeeId = {
    currentEmployeeId: string;
};
export declare const $CurrentEmployeeId: string | ((model?: $CurrentEmployeeId) => string);
/** Сервис доступа к логину текущего пользователя. */
export declare type $CurrentEmployeeAccountName = {
    currentEmployeeAccountName: string;
};
export declare const $CurrentEmployeeAccountName: string | ((model?: $CurrentEmployeeAccountName) => string);
/** Сервис информации о типе устройства, в котором открыт Web-клиент. */
export declare type $DeviceType = {
    deviceType: GenModels.DeviceType;
    defaultDeviceType: GenModels.DeviceType;
};
export declare const $DeviceType: string | ((model?: $DeviceType) => GenModels.DeviceType);
/** Сервис доступа к временной метке запуска сервера. */
export declare type $ApplicationTimestamp = {
    applicationTimestamp: number;
};
export declare const $ApplicationTimestamp: string | ((model?: $ApplicationTimestamp) => number);
/** Сервис доступа к адресу сайта. */
export declare type $SiteUrl = {
    siteUrl: string;
};
export declare const $SiteUrl: string | ((model?: $SiteUrl) => string);
/** Сервис доступа к текущей локали Web-клиента в двухбуквенном формате (en, ru). */
export declare type $Locale = {
    locale: string;
};
export declare const $Locale: string | ((model?: $Locale) => string);
/** Сервис доступа к настройке полнотекстового поиска. */
export declare type $FullTextSearchEnabled = {
    fullTextSearchEnabled: boolean;
};
export declare const $FullTextSearchEnabled: string | ((model?: $FullTextSearchEnabled) => boolean);
/** Сервис получения информации плагине КриптоПро. */
export declare type $InstalledCSP = {
    installedCSP: boolean;
};
export declare const $InstalledCSP: string | ((model?: $InstalledCSP) => boolean);
/** Сервис информации об имени базы, с которой работает Web-клиент. */
export declare type $BaseName = {
    baseName: string;
};
export declare const $BaseName: string | ((model?: $BaseName) => string);
export declare type $RouteTimestamp = {
    readonly routeTimestamp: number;
    updateRouteTimestamp(): any;
};
export declare const $RouteTimestamp: string | ((model?: $RouteTimestamp) => number);
export declare type $IsMobileSafari = {
    isMobileSafari: boolean;
};
export declare const $IsMobileSafari: string | ((model?: $IsMobileSafari) => boolean);
export declare type $WebViewIOSEnabled = {
    webViewIOSEnabled: boolean;
};
export declare const $WebViewIOSEnabled: string | ((model?: $WebViewIOSEnabled) => boolean);
/** Настройка из web.config - включено ли логирование клиентского роутинга. */
export declare type $EnableRouterLogging = {
    enableRouterLogging: boolean;
};
export declare const $EnableRouterLogging: string | ((model?: $EnableRouterLogging) => boolean);
export declare type $LogEnabled = {
    logEnabled: boolean;
};
export declare const $LogEnabled: string | ((model?: $LogEnabled) => boolean);
export declare type $IsIE = {
    readonly isIE: boolean;
};
export declare const $IsIE: string | ((model?: $IsIE) => boolean);
export declare type $IsSafari = {
    readonly isSafari: boolean;
};
export declare const $IsSafari: string | ((model?: $IsSafari) => boolean);
export declare type $LastSearchRequest = {
    lastSearchRequest: string;
};
export declare const $LastSearchRequest: string | ((model?: $LastSearchRequest) => string);
export declare type $CurrentEmployee = {
    currentEmployee: GenModels.EmployeeModel;
};
export declare const $CurrentEmployee: string | ((model?: $CurrentEmployee) => GenModels.EmployeeModel);
export declare type $ApplicationSettings = {
    applicationSettings: GenModels.ApplicationSettings;
};
export declare const $ApplicationSettings: string | ((model?: $ApplicationSettings) => GenModels.ApplicationSettings);
/** Стандартные сервисы Web-клиента. */
export declare type $StandardServices = $Layout & $Router & $CurrentEmployeeId & $CurrentEmployeeAccountName & $DeviceType & $SiteUrl & $Locale & $FullTextSearchEnabled & $RequestManager & $Sidebar & $FolderViews & $SearchPanel & $NavBar & $Folders & $UnreadCounter & $InstalledCSP & $ApplicationTimestamp & $LayoutManager & $RealtimeCommunicationService & $UserMenu & $LayoutControlFactory & $EditOperationStore & $LayoutInfo & $CardInfo & $RowInfo & $CardId & $RowId & $CardTimestamp & $ControlStore & $LocalStorage & $BaseName & $RouteTimestamp & $EnableRouterLogging & $IsMobileSafari & $LogEnabled & $IsIE & $IsSafari & $LastSearchRequest & $UrlStore & $UrlResolver & $CurrentEmployee & $RouterNavigation & $OwnerLayout & $ApplicationSettings & $ExtensionManager & $WebServices & $BatchOperationsProgressDialog & $BatchOperationsPerformer & $InsideMainMenu & $Timeout & $WebFrameContext & $ExtendedDataSourceInfos & $FilePickerUpload & $MessageBox & $WindowLocation & $FileDownload & $ExperimentalFeature & $UnreadCounterNotification & $EmployeeStatus & $CacheManagement & $FileScan & $LayoutCheck & $ScanDialog & $FileService & $CompanyLogo & $ContentElementProvider & $RootCssClass & $FilePreview & $WebViewIOSEnabled & $FileUpload & Partial<$WebFrameDirectorySearchPanelService> & $Domain & $Resources & $MessageWindow & $DialogManagement & $WebFrameDirectorySearchInfoStorageService & $WebFrameSearchPanel & $LastSearchResponse & $RefreshUnreadCounters & $LastSearchParameters & $CloudSignature & $CryptoPro & $CurrentFolder & $LastSearchResponse & $Poll & $FolderPluginProvider & $LayoutBackground & $ApprovalPathVisualizationController & $HoverPanel & $HoverPanel & $DigitalSignature & $WebFrameDirectorySearchPanelService & $WebFrameContentHeight & $FolderColors;
