import { AuthBox } from '@docsvision/webclient/Account/Components/AuthBox';
import { LoginError } from '@docsvision/webclient/Account/Components/LoginError';
import { LoginLogic } from '@docsvision/webclient/Account/LoginLogic';
import React from 'react';
import { AutoCompleteOptions, ILoginExtensionManager } from '@docsvision/webclient/Account/';
import { ErrorBlock } from '@docsvision/webclient/Account/Components/ErrorBlock';
import { Form } from '@docsvision/webclient/Account/Components/Form';
import { LoginInputsDivider } from '@docsvision/webclient/Account/Components/LoginInputsDivider';
import { ChangeMethodButton } from '@docsvision/webclient/Account/Components/ChangeMethodButton';
import { IComponentProps } from '@docsvision/web/core/component';
import { Box } from '@docsvision/webclient/Account/Components/Box';
import "@docsvision/webclient/Legacy/NativeFunctions";
export declare class LoginView {
    form: typeof Form;
    changeMethodButton: typeof ChangeMethodButton;
    divider: typeof LoginInputsDivider;
    errorBox: typeof LoginError;
    errorBlock: typeof ErrorBlock;
    authBox: typeof AuthBox;
    box: typeof Box;
    greeting: React.NamedExoticComponent<
import("./Components/Greeting").IGreetingProps>;
    providers: React.NamedExoticComponent<
import("./Components/Providers").IProvidersProps>;
    contactBox: React.NamedExoticComponent<
import("./Components/ContactBox").IContactBoxProps>;
    providerButton: React.NamedExoticComponent<
import("./Components/ProviderButton").IProviderButtonProps>;
    logo: React.NamedExoticComponent<Record<string, any>>;
    input: React.NamedExoticComponent<
import("./Components/Input").IInputProps>;
    button: React.NamedExoticComponent<
import("./Components/Button").IButtonProps>;
    authBoxBefore: (logic: LoginLogic) => React.ReactElement;
    authBoxAfter: (logic: LoginLogic) => React.ReactElement;
    formBefore: (logic: LoginLogic) => React.ReactElement;
    formAfter: (logic: LoginLogic) => React.ReactElement;
    providersBefore: (logic: LoginLogic) => React.ReactElement;
    providersAfter: (logic: LoginLogic) => React.ReactElement;
}
export interface ILoginContainerProps extends IComponentProps<LoginLogic, LoginView> {
    options?: ILoginExtensionManager;
}
export declare function LoginContainer(props: ILoginContainerProps): JSX.Element;
export declare function renderInputs(logic: LoginLogic, view: LoginView, resources: {
    [key: string]: string;
}, hideLoginInput: boolean, autocompleteOptions: AutoCompleteOptions): JSX.Element;
