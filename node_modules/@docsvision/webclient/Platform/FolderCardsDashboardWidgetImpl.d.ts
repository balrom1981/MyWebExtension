import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { FolderCardsDashboardWidgetParams } from "@docsvision/webclient/Platform/FolderCardsDashboardWidget";
import { PanelImpl, IPanelState } from "@docsvision/webclient/Platform/PanelImpl";
import { $GridOptions, IGridOptions } from '@docsvision/webclient/Platform/$GridOptions';
import { RequestHelper } from "@docsvision/webclient/System/RequestHelper";
import React from "react";
import { $ApplicationSettings, $IsIE } from '@docsvision/webclient/StandardServices';
import { $FolderGrid } from '@docsvision/webclient/Platform/$FolderGrid';
import { IFolderDataLoader } from '@docsvision/webclient/Platform/IFolderDataLoader';
import { $CurrentFolder } from '@docsvision/webclient/Platform/$CurrentFolder';
import { $FolderDataLoading } from '@docsvision/webclient/Platform/$FolderDataLoading';
import { $Router } from '@docsvision/webclient/System/$Router';
import { $Domain } from '@docsvision/web/core/state-management';
export declare type FolderCardsDashboardWidgetServices = FolderCardsDashboardWidgetParams["services"] & $FolderGrid & $GridOptions & $FolderDataLoading & $Router & $CurrentFolder & $Domain & $ApplicationSettings & $IsIE;
/** @internal */
export interface IFolderCardsDashboardWidgetState extends FolderCardsDashboardWidgetParams, IPanelState {
    gridModel: GenModels.CardListViewModel;
    loader: RequestHelper;
    gridContainer: HTMLElement;
    locationName: string;
    opacity: number;
    gridOptions: IGridOptions;
    gridLayoutServices: FolderCardsDashboardWidgetServices;
}
export interface FolderCardsDashboardWidgetState extends IFolderCardsDashboardWidgetState {
}
/** @internal */
export declare class FolderCardsDashboardWidgetImpl<PropsT extends FolderCardsDashboardWidgetParams, StateT extends IFolderCardsDashboardWidgetState> extends PanelImpl<PropsT, StateT> {
    static readonly size = 5;
    dataLoader: IFolderDataLoader;
    constructor(props: PropsT, state: StateT);
    componentDidMount(): void;
    loadGridModel(): Promise<void>;
    prepareServices(gridLayoutServices: FolderCardsDashboardWidgetParams["services"]): void;
    handleWrapperScroll(): void;
    getBlockWrapper(): HTMLElement;
    componentWillUnmount(): void;
    getCssStyle(): React.CSSProperties;
    renderControl(): JSX.Element;
}
