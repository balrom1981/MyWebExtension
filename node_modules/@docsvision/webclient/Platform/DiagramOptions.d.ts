import { $CardsPresentationController, $GridController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { DiagramLogic } from "@docsvision/webclient/Platform/DiagramLogic";
import { DiagramView } from "@docsvision/webclient/Platform/DiagramView";
import { ParseDiagramModel } from "@docsvision/webclient/Platform/IDiagramModels";
import { BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { CancelableApiEvent } from "@docsvision/webclient/System/ApiEvent";
import { $Router } from "@docsvision/webclient/System/$Router";
import { $FolderColors } from "@docsvision/webclient/System/$FolderColors";
import { IControlOptions } from "@docsvision/webclient/System/IControlOptions";
import { Optional } from "@docsvision/web/core/services";
import { $DeviceType } from "@docsvision/web/core/system-services/environment/DeviceTypeService";
/**
 * Содержит публичные свойства элемента управления [DiagramParams]{@link DiagramParams}.
 */
export declare class DiagramParams extends BaseControlParams {
    /** Standart CSS class */
    standardCssClass?: string;
    isLegendEnabled: boolean;
    /** Положение легенды */
    legendPosition: GenModels.DiagramLegendPosition;
    /** Заголовок */
    title: string;
    /** Цветовой режим */
    colorMode: GenModels.DiagramColorMode;
    /** Цветовая схема */
    colorScheme: GenModels.DiagramLegendColorScheme;
    openFolder: boolean;
    /** Параметры */
    parameters?: Array<unknown>;
    /** Тип диаграммы */
    diagramType: GenModels.DiagramType;
    folderId?: string;
    viewId?: string;
    /** Идентификатор запроса  */
    searchQueryId?: string;
    /** Первая колонка */
    columnPrimary: string;
    /** Вторая колонка */
    columnSecondary: string;
    /** Опции диаграммы */
    chartOptions?: object;
    /** Высота */
    height: number;
    /** После загрузки данных */
    dataLoaded?: CancelableApiEvent<ParseDiagramModel>;
    /** Сервисы контрола */
    services: DiagramServices;
}
export declare type DiagramServices = Optional<$DiagramOptions> & $CardsPresentationController & $GridController & $Router & $DeviceType & $FolderColors;
export declare type $DiagramOptions = {
    diagramOptions: IControlOptions<DiagramParams, DiagramLogic, DiagramView>;
};
export declare const $DiagramOptions: string | ((model?: $DiagramOptions) => IControlOptions<DiagramParams, DiagramLogic, DiagramView>);
