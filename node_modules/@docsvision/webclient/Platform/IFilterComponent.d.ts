import { $GridController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $FolderDataLoading } from "@docsvision/webclient/Platform/$FolderDataLoading";
import { $ApplicationSettings } from "@docsvision/webclient/StandardServices";
import { ColumnType } from "@docsvision/web/components/table/interfaces";
import { $TableFilterService, IDateFormatPluginData } from "@docsvision/web/components/table/plugins/filter";
import { $Grouping } from "@docsvision/web/components/table/plugins/grouping";
import { $TableData } from "@docsvision/web/components/table/plugins/table-data";
import { $Resources } from "@docsvision/web/core/localization/$Resources";
import { Moment } from "moment";
import { RefObject } from "react";
export declare type FilerComponentServiceT = $GridController & $FolderDataLoading & $Resources & $TableData & $ApplicationSettings & $Grouping & $ApplicationSettings & $TableData & $TableFilterService;
export interface IFilterComponent {
    value: string[];
    onChange(value: (string | Moment)[], mode?: GenModels.FilterMode): void;
    mode: GenModels.FilterMode;
    setMode(mode: GenModels.FilterMode): void;
    customClass?: string;
    forwardRef: RefObject<HTMLInputElement>;
    dateFormatData: IDateFormatPluginData;
    services: FilerComponentServiceT;
    columnName: string;
    type: ColumnType;
    focused: boolean;
    onChangeFocus(e: unknown, flag: boolean): void;
    isValueValid: boolean;
    locale: string;
    visible: boolean;
}
