import { $GridController, $PagesController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { RecentCardsDashboardWidgetImpl, IRecentCardsDashboardWidgetState } from "@docsvision/webclient/Platform/RecentCardsDashboardWidgetImpl";
import { Panel, PanelParams } from "@docsvision/webclient/Platform/Panel";
import { $Layout } from '@docsvision/webclient/System/$Layout';
import { $LayoutInfo } from '@docsvision/webclient/System/LayoutServices';
import { $LocationContainerControlServices } from '@docsvision/webclient/System/LocationContainerControl';
import { $ExperimentalFeature } from '@docsvision/webclient/System/$ExperimentalFeature';
import { $LayoutManager } from '@docsvision/webclient/System/$LayoutManager';
import { $Router } from '@docsvision/webclient/System/$Router';
import React from 'react';
/**
 * @internal
 * Содержит публичные свойства элемента управления [RecentCardsDashboardWidget]{@link RecentCardsDashboardWidget}.
 */
export declare class RecentCardsDashboardWidgetParams extends PanelParams {
    /** Текст заголовка. */
    header: string;
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    opacity?: number;
    services?: $PagesController & $GridController & $LayoutManager & $Layout & $LocationContainerControlServices & $ExperimentalFeature & $Router & $LayoutInfo;
}
/** @internal */
export declare class RecentCardsDashboardWidget extends Panel<RecentCardsDashboardWidgetParams, IRecentCardsDashboardWidgetState> {
    createParams(): RecentCardsDashboardWidgetParams;
    private set textResourceKey(value);
    protected createImpl(): RecentCardsDashboardWidgetImpl<Readonly<RecentCardsDashboardWidgetParams> & Readonly<{
        children?: React.ReactNode;
    }>, IRecentCardsDashboardWidgetState>;
}
