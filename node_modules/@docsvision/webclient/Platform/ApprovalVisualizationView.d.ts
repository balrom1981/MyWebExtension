/// <reference types="react" />
import { ApprovalVisualizationArrows } from "@docsvision/webclient/Platform/ApprovalVisualizationArrows";
import { ApprovalVisualizationConditionOption } from "@docsvision/webclient/Platform/ApprovalVisualizationConditionOption";
import { ApprovalVisualizationConditionList } from "@docsvision/webclient/Platform/ApprovalVisualizationConditionList";
import { ApprovalVisualizationContainer } from "@docsvision/webclient/Platform/ApprovalVisualizationContainer";
import { ApprovalVisualizationDescription } from "@docsvision/webclient/Platform/ApprovalVisualizationDescription";
export declare class ApprovalVisualizationView {
    arrows: typeof ApprovalVisualizationArrows;
    description: typeof ApprovalVisualizationDescription;
    vis: 
import("react").ForwardRefExoticComponent<Pick<
 | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & 
import("react").RefAttributes<HTMLDivElement>>;
    container: typeof ApprovalVisualizationContainer;
    conditionList: typeof ApprovalVisualizationConditionList;
    conditionOption: typeof ApprovalVisualizationConditionOption;
}
