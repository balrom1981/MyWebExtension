import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { IAggregate, IAggregatesState, ISelectItemData } from "@docsvision/webclient/Platform/IAggregates";
import { Store } from "effector";
export interface IAggregatesCheckboxService {
    /** Доступность настроенных агрегатов. */
    readonly $isAggregatesAvailable: Store<boolean>;
    /** Доступность агрегации пользователю. */
    readonly $isAggregationUser: Store<boolean>;
    /** Дерево значений агрегации. */
    readonly $aggregates: Store<IAggregate[] | null>;
    /** Состояние загрузки агрегатов */
    readonly $aggregatesState: Store<IAggregatesState>;
    /** Выбранные значения агрегатов */
    readonly $selectedAggregateItems: Store<GenModels.GridAggregateValue[]>;
    toggleAggregate(item: IAggregate): void;
    toggleAll(expanded: boolean): void;
    selectItemValue(data: ISelectItemData): void;
    applySelection(): void;
    clearAll(): void;
    registerTab(): void;
}
export declare type $Aggregates = {
    aggregates: IAggregatesCheckboxService;
};
export declare const $Aggregates: string | ((model?: $Aggregates) => IAggregatesCheckboxService);
