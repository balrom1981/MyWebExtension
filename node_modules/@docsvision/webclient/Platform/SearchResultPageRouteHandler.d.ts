import { $LayoutController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { IRouteHandler } from "@docsvision/webclient/System/IRouteHandler";
import { RouteHandleResult } from "@docsvision/webclient/System/RouteHandleResult";
import { RouteType } from "@docsvision/webclient/System/RouteType";
import { $LayoutManager } from '@docsvision/webclient/System/$LayoutManager';
import { ISearchResultPageRouteData } from '@docsvision/webclient/Platform/ISearchResultPageRouteData';
import { $FullTextSearchEnabled } from '@docsvision/webclient/StandardServices';
import { $Router } from '@docsvision/webclient/System/$Router';
import { $CompanyLogo } from '@docsvision/webclient/Platform/$CompanyLogo';
import { $WebFrameSearchPanel } from '@docsvision/webclient/Platform/$WebFrameSearchPanel';
/** @internal */
export declare class SearchResultPageRouteHandler implements IRouteHandler<ISearchResultPageRouteData> {
    private services;
    name: string;
    private gridLocationName;
    constructor(services: $LayoutController & $LayoutManager & $FullTextSearchEnabled & $Router & $CompanyLogo & $WebFrameSearchPanel);
    prepareRouteDataLoad(routeData: Partial<ISearchResultPageRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    loadRouteData(routeData: Partial<ISearchResultPageRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    mountRoute(data: ISearchResultPageRouteData, routeType: RouteType): Promise<RouteHandleResult>;
    unmountRoute(data: ISearchResultPageRouteData, routeType: RouteType): Promise<{}>;
}
