import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { IEditPopoverProps } from "@docsvision/webclient/Helpers/PopoverHelpers/EditPopover/IEditPopoverProps";
import { RadioGroup, RadioGroupParams } from "@docsvision/webclient/Platform/RadioGroup";
import { InputBasedControlImpl, InputBasedControlState } from "@docsvision/webclient/System/InputBasedControlImpl";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import React from "react";
/** @internal */
export interface IRadioGroupState extends RadioGroupParams, InputBasedControlState<string> {
    binding: IBindingResult<string>;
}
export interface RadioGroupState extends IRadioGroupState {
}
/** @internal */
export declare type RadioGroupImplState = IRadioGroupState;
/** @internal */
export declare class RadioGroupImpl extends InputBasedControlImpl<string, RadioGroupParams, IRadioGroupState> {
    static readonly EMPTY_ELEMENT: GenModels.BindingMetadata;
    constructor(props: any, state: IRadioGroupState);
    protected getTextValue(): string;
    protected renderInto(props: RadioGroupParams, container: HTMLElement): void;
    protected showEditPopover(popoverOptions?: IEditPopoverProps): Promise<RadioGroup>;
    protected onElementChange(element: GenModels.BindingMetadata, ev: React.FormEvent): void;
    protected renderPlaceholder(): JSX.Element;
    protected renderLabel(element: GenModels.BindingMetadata): JSX.Element;
    protected getColumns(): Array<Array<GenModels.BindingMetadata>>;
    protected renderInput(): React.ReactNode;
}
