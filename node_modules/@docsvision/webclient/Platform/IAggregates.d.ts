import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
export interface IAggregatesState {
    loading: boolean;
    /** Имеются выбранные пользователем значения, которые необходимо применить вручную нажатием кнопки. */
    waitingCommandToLoad?: boolean;
}
export interface IAggregate extends GenModels.GridAggregateModel {
    /** Развернуты ли значения агрегации следующего уровня */
    expanded?: boolean;
}
export interface ISelectItemData {
    item: GenModels.GridAggregateValue;
    value: boolean;
}
export interface IAggregateItem extends GenModels.GridAggregateValue {
    aggregationAlias: string;
}
export interface AggregateItem extends IAggregateItem {
}
export interface IAggregatesServiceOptions {
    enabled: boolean;
    /**
     * Таймаут в милисекундах, после которого выбранные значения применяются.
     */
    applyTimeout?: number;
    /** Значение true (по умолчанию) отключает автоматическое применение, отображая кнопку для применения вручную. */
    applyButton?: boolean;
}
export interface IGridAggregatesRequest {
    folderId: string;
    queryId: string;
    instanceId: string;
}
export interface GridAggregatesRequest extends IGridAggregatesRequest {
}
export interface ILoadItemsOptions {
    dropFilters?: boolean;
    loadSelection?: boolean;
}
export declare enum AggregatesItemType {
    CheckBox = 0,
    Date = 1,
    DateRange = 2
}
