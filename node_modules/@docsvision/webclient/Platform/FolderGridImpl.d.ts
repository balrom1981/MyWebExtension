import { FolderGridParams } from '@docsvision/webclient/Platform/FolderGrid';
import { BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { BaseControlImpl } from "@docsvision/webclient/System/BaseControlImpl";
import React from "react";
import { Subscription } from 'effector';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { BasicEvent } from '@docsvision/webclient/System/BasicEvent';
import { IEventArgs } from '@docsvision/webclient/System/IEventArgs';
/** @internal */
export interface IFolderGridState extends FolderGridParams, BaseControlState {
    testPanelExpanded: boolean;
    children: GenModels.ControlModel[];
    rowsSelectionMode: boolean;
    rowsSelectionModeChanged: BasicEvent<IEventArgs>;
    newGridAvailable: boolean;
    toolbarProperties: Record<string, unknown>;
}
export interface FolderGridState extends IFolderGridState {
}
/** @internal */
export declare class FolderGridImpl extends BaseControlImpl<FolderGridParams, IFolderGridState> {
    gridContainer: HTMLElement;
    dataWatch: Subscription;
    cssVariables: {
        name: string;
        value: string;
        defaultValue: string;
    }[];
    constructor(props: FolderGridParams, state: IFolderGridState);
    isDesktop: () => boolean;
    componentDidMount(): Promise<void>;
    componentWillUnmount(): void;
    mountGrid(gridContainer: HTMLElement): void;
    protected getCssStyle(): React.CSSProperties;
    renderControl(): JSX.Element;
    private getDisabledFeaturesWithOptions;
    private prepareSidePanelContentForSearchResult;
    private setSidePanelContent;
    renderTestPanel(): JSX.Element;
}
