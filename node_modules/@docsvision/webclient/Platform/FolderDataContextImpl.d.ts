import { FolderDataContextParams, $FolderDataContextServices } from "@docsvision/webclient/Platform/FolderDataContext";
import { PanelImpl, IPanelState } from "@docsvision/webclient/Platform/PanelImpl";
import React from "react";
import { $FolderInfo, IFolderInfoService } from '@docsvision/webclient/Platform/$FolderInfo';
import { $FolderDataLoading } from '@docsvision/webclient/Platform/$FolderDataLoading';
import { Optional } from '@docsvision/web/core/services';
import { ICommonFolderInfo } from '@docsvision/webclient/Platform/ICommonFolderInfo';
import { IFolderDataLoadingPlugin } from '@docsvision/webclient/Platform/IFolderDataLoadingPlugin';
import { Subscription } from 'effector';
import { $Domain } from '@docsvision/web/core/state-management';
import { $ApplicationSettings } from '@docsvision/webclient/StandardServices';
import { $FolderGrid } from "@docsvision/webclient/Platform/$FolderGrid";
import { $Router } from "@docsvision/webclient/System/$Router";
import { $CurrentFolder } from "@docsvision/webclient/Platform/$CurrentFolder";
import { $LastSearchResponse } from "@docsvision/webclient/System/$LastSearchResponse";
import { $WebFrameSearchPanel } from "@docsvision/webclient/Platform/$WebFrameSearchPanel";
import { $UnreadCounter } from "@docsvision/webclient/Platform/$UnreadCounter";
/** @internal */
export interface IFolderDataContextState extends IPanelState, FolderDataContextParams {
    searchRequestedUnsubscribe: Subscription;
    receivedServices?: $FolderDataContextServices;
    services?: TFolderDataContextStateServices;
}
declare type TFolderDataContextStateServices = $FolderDataContextServices & $FolderInfo & $ApplicationSettings & Optional<$FolderDataLoading> & Optional<$Domain> & $Router & Optional<$FolderGrid> & $CurrentFolder & $LastSearchResponse & $WebFrameSearchPanel & $UnreadCounter;
export interface FolderDataContextState extends IFolderDataContextState {
}
/** @internal */
export declare class FolderDataContextImpl extends PanelImpl<FolderDataContextParams, IFolderDataContextState> implements IFolderInfoService {
    constructor(props: FolderDataContextParams, state: IFolderDataContextState);
    componentWillUnmount(): void;
    getDefaultPlugins(folderInfo: ICommonFolderInfo): IFolderDataLoadingPlugin[];
    addPlugin(plugin: IFolderDataLoadingPlugin): void;
    get info(): ICommonFolderInfo;
    init(): void;
    deinit(): void;
    private initServices;
    renderControl(): React.ReactNode[];
}
export {};
