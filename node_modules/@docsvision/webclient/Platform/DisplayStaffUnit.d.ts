import { InputBasedControlParams, InputBasedControl } from '@docsvision/webclient/System/InputBasedControl';
import { DisplayStaffUnitImpl, IDisplayStaffUnitState } from '@docsvision/webclient/Platform/DisplayStaffUnitImpl';
import { $LabelWidth } from '@docsvision/webclient/System/$LabelWidth';
import { $LayoutInfo } from '@docsvision/webclient/System/LayoutServices';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { Optional } from '@docsvision/web/core/services';
import { EditMode } from '@docsvision/webclient/System/EditMode';
export declare class DisplayStaffUnitParams extends InputBasedControlParams<string> {
    /** Возвращает режим редактирования. */
    editMode?: EditMode;
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Определяет структуру отображения иерархии организации сотрудника */
    hierarchyOutput?: GenModels.StaffUnitHierarchyOutputMode;
    /** Флаг отображения головной организации иерархии */
    showParentOrganization?: boolean;
    /** Флаг отображения промежуточных узлов иерархии */
    cropOnDisplay?: boolean;
    /** Текстовый разделитель узлов иерархии */
    delimiter?: string;
    services?: $LayoutInfo & Optional<$LabelWidth>;
}
/**
 * Класс элемента управления Отображение организации сотрудника.
 */
export declare class DisplayStaffUnit extends InputBasedControl<string, DisplayStaffUnitParams, IDisplayStaffUnitState> {
    protected createParams(): DisplayStaffUnitParams;
    protected createImpl(): DisplayStaffUnitImpl;
    protected getServices(): $LayoutInfo & Partial<$LabelWidth>;
    private set setBinding(value);
}
