/// <reference types="react" />
import { BaseControl, BaseControlParams, BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { ControlImpl } from '@docsvision/webclient/System/ControlImpl';
import { $CompanyLogo, LogoType } from '@docsvision/webclient/Platform/$CompanyLogo';
import { $Layout } from '@docsvision/webclient/System/$Layout';
import { $Router } from "@docsvision/webclient/System/$Router";
/**
 * Содержит публичные свойства элемента управления [Метка]{@link WebFrameCompanyLogo}.
 */
export declare class WebFrameCompanyLogoParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Скрыт или показан логотип */
    isLogoHidden?: boolean;
    /** Тип логотипа: изображение или текст */
    typeOfLogo?: LogoType;
    /** Текст логотипа */
    logoText?: string;
    /** Показывать ли логотип при переходе по папкам */
    alwaysShow?: boolean;
    /** Путь к логотипу */
    filePath?: string;
    services?: $CompanyLogo & $Layout & $Router;
}
export interface IWebFrameCompanyLogoState extends WebFrameCompanyLogoParams, BaseControlState {
}
/**
 * Класс элемента управления WebFrameCompanyLogo.
 */
export declare class WebFrameCompanyLogo extends BaseControl<WebFrameCompanyLogoParams, IWebFrameCompanyLogoState> {
    private logoIcon;
    private companyLogoControl;
    /** @notest @internal */
    protected createParams(): WebFrameCompanyLogoParams;
    /** @notest @internal  */
    protected createImpl(): ControlImpl;
    /** Показать логотип */
    showLogo: () => void;
    /** Скрыть логотип */
    hideLogo: () => void;
    componentDidMount(): void;
    updateLogoVisibility: () => void;
    getTypeOfLogo: () => void;
    get isImageAllowed(): boolean;
    /** ID"company-logo" only for Backward compatibility */
    /** "company-logo-active/company-logo-hidden" only for Backward compatibility */
    protected renderLogo(): JSX.Element;
    renderControl(): JSX.Element;
}
