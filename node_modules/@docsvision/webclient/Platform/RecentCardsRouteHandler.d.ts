import { $GridController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { IRecentCardsRouteData } from "@docsvision/webclient/Platform/IRecentCardsRouteData";
import { IRouteHandler } from "@docsvision/webclient/System/IRouteHandler";
import { RouteHandleResult } from "@docsvision/webclient/System/RouteHandleResult";
import { RouteType } from "@docsvision/webclient/System/RouteType";
import { $LayoutManager } from '@docsvision/webclient/System/$LayoutManager';
import { $ExperimentalFeature } from "@docsvision/webclient/System/$ExperimentalFeature";
import { IFolderDataLoader } from "@docsvision/webclient/Platform/IFolderDataLoader";
import { $IsIE } from '@docsvision/webclient/StandardServices';
/** @internal */
export declare class RecentCardsRouteHandler implements IRouteHandler<IRecentCardsRouteData> {
    private services;
    private gridLocationName;
    name: string;
    constructor(services: $GridController & $LayoutManager & $ExperimentalFeature & $IsIE);
    protected getGridModelLoader: () => IFolderDataLoader;
    loadRouteData(knownRouteData: Partial<IRecentCardsRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    mountRoute(data: IRecentCardsRouteData, routeType: RouteType): Promise<RouteHandleResult>;
    unmountRoute(data: IRecentCardsRouteData, routeType: RouteType): Promise<{}>;
}
