import { ICommonFolderInfo } from '@docsvision/webclient/Platform/ICommonFolderInfo';
import { IFolderDataLoadingPlugin } from '@docsvision/webclient/Platform/IFolderDataLoadingPlugin';
import { $CurrentLocation } from '@docsvision/webclient/System/LayoutServices';
import { $DeviceType } from '@docsvision/webclient/StandardServices';
import { IFolderPluginFactory } from '@docsvision/webclient/Platform/IFolderPluginFactory';
import { ITablePlugins } from '@docsvision/web/components/table/interfaces';
/** Предоставляет плагины для контрола {@see FolderDataContext}. */
export interface IFolderPluginProvider {
    getFactories(): IFolderPluginFactory[];
    addFactory(factory: IFolderPluginFactory): void;
    removeFactory(id: string): void;
    getDataLoadingPlugins(folderInfo: ICommonFolderInfo, services: $CurrentLocation & $DeviceType): IFolderDataLoadingPlugin[];
    getTablePlugins(folderInfo: ICommonFolderInfo, services: $CurrentLocation & $DeviceType): ITablePlugins[];
}
/** Предоставляет плагины для контрола {@see FolderDataContext}. */
export declare type $FolderPluginProvider = {
    folderPluginProvider: IFolderPluginProvider;
};
export declare const $FolderPluginProvider: string | ((model?: $FolderPluginProvider) => IFolderPluginProvider);
