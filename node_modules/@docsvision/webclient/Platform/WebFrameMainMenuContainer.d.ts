import { Panel, PanelParams } from '@docsvision/webclient/Platform/Panel';
import { IPanelState } from '@docsvision/webclient/Platform/PanelImpl';
import { WebFrameMainMenuContainerImpl } from '@docsvision/webclient/Platform/WebFrameMainMenuContainerImpl';
import { $ApplicationSettings, $DeviceType, $IsIE } from '@docsvision/webclient/StandardServices';
import { $ContentElementProvider } from '@docsvision/webclient/Platform/$ContentElementProvider';
import { $LocalStorage } from '@docsvision/webclient/System/$LocalStorage';
import { $WebFrameContentHeight } from '@docsvision/webclient/System/$WebFrameContentHeight';
/**
 * Содержит публичные свойства элемента управления [Метка]{@link WebFrameMainMenuContainer}.
 */
export declare class WebFrameMainMenuContainerParams extends PanelParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Закреплено ли меню */
    isPinned?: boolean;
    /** Скрыто ли меню */
    isClosed?: boolean;
    /** Скрыт ли ползунок для ресайза */
    isHandleHidden?: boolean;
    services: $ApplicationSettings & $DeviceType & $ContentElementProvider & $LocalStorage & $IsIE & $WebFrameContentHeight;
}
export interface IWebFrameMainMenuContainerState extends WebFrameMainMenuContainerParams, IPanelState {
}
/**
 * Класс элемента управления WebFrameMainMenuContainer.
 */
export declare class WebFrameMainMenuContainer extends Panel<WebFrameMainMenuContainerParams, IWebFrameMainMenuContainerState> {
    /** @notest @internal */
    protected createParams(): WebFrameMainMenuContainerParams;
    /** @notest @internal  */
    protected createImpl(): WebFrameMainMenuContainerImpl;
    private get control();
    private get WebFrameMainMenuContainerImpl();
    getMainMenuElement: () => HTMLElement;
    get isPinned(): boolean;
    get IsClosed(): boolean;
    pinned: (value: boolean) => void;
    saveSettings: () => void;
    loadSettings: () => void;
    resetSettings: () => void;
    open: (showOnRightSide?: boolean) => void;
    setSidebarWidth: (width?: number) => void;
    close: (showOnRightSide?: boolean) => void;
    componentDidMount(): void;
}
