import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { getFlagEntry } from '@docsvision/webclient/Platform/GetFlagEntry';
import { getFlagState } from '@docsvision/webclient/Platform/GetFlagState';
import { getInheritanceMode } from '@docsvision/webclient/Platform/GetInheritanceMode';
import { AccessListRow } from '@docsvision/webclient/Platform/AccessListRow';
import { SecurityDescriptorDialogProps } from '@docsvision/webclient/Platform/SecurityDescriptorDialog';
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
import { ComponentLogic } from "@docsvision/web/core/component";
import { Store } from 'effector';
export interface SecurityDescriptorDialogLogicOptions extends SecurityDescriptorDialogProps {
    showDisableInheritanceModeSelectDialog: (services: $MessageBox) => Promise<boolean>;
    showEnableInheritanceConfirmationDialog: (services: $MessageBox) => Promise<void>;
}
export declare class SecurityDescriptorDialogLogic extends ComponentLogic<SecurityDescriptorDialogLogicOptions> {
    domain: 
import("effector").Domain;
    $descriptor: Store<GenModels.SecurityDescriptor>;
    loadDescriptorFx: 
import("effector").Effect<GenModels.SecurityTarget, GenModels.SecurityDescriptor, Error>;
    componentDidMount: 
import("effector").Event<void>;
    initDescriptorLoading(): void;
    $trusteeOrder: Store<GenModels.AccessControlTrustee[]>;
    $accessListRows: Store<AccessListRow[]>;
    initOrdering(): void;
    acceptFx: 
import("effector").Effect<void, GenModels.SecurityDescriptor, Error>;
    applyFx: 
import("effector").Effect<void, GenModels.SecurityDescriptor, Error>;
    saveFx: 
import("effector").Effect<void, GenModels.SecurityDescriptor, Error>;
    acceptClick: 
import("effector").Event<void>;
    applyClick: 
import("effector").Event<void>;
    initSaving(): void;
    addRow: 
import("effector").Event<GenModels.DirectoryItemData[]>;
    initRowAdding(): void;
    removeRow: 
import("effector").Event<AccessListRow>;
    initRowRemoving(): void;
    enableInheritance: 
import("effector").Event<void>;
    disableInheritance: 
import("effector").Event<void>;
    $descriptorChanged: Store<boolean>;
    enableInheritanceFx: 
import("effector").Effect<GenModels.EnableInheritanceOptions, GenModels.SecurityDescriptor, Error>;
    $pendingEnableInheritanceRequest: Store<GenModels.EnableInheritanceOptions>;
    selectDisableInheritanceModeFx: 
import("effector").Effect<void, boolean, Error>;
    initInheritanceButtons(): void;
    toggleAccess: 
import("effector").Event<{
        flag: GenModels.AccessMaskFlagInfo;
        row: AccessListRow;
    }>;
    initAccessEdit(): void;
    canEdit(row: AccessListRow): boolean;
    getFlagState: typeof getFlagState;
    getInheritanceMode: typeof getInheritanceMode;
    getFlagEntry: typeof getFlagEntry;
    init(props: SecurityDescriptorDialogLogicOptions): void;
}
