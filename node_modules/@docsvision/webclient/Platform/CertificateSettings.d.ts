/// <reference types="react" />
import { $ApplicationSettings, $DeviceType, $WebViewIOSEnabled } from "@docsvision/webclient/StandardServices";
import { BaseControl, BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { ControlImpl } from "@docsvision/webclient/System/ControlImpl";
import { $SignatureController, $SignatureMethodsController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { Optional } from "@docsvision/web/core/services";
import { CertificateSettingsLogic, ICertificateSettingsLogicOptions } from "@docsvision/webclient/Platform/CertificateSettingsLogic";
import { $CryptoPro } from "@docsvision/webclient/BackOffice/$CryptoPro";
import { $MessageBox } from "@docsvision/webclient/System/$MessageBox";
import { BaseControlImplState } from "@docsvision/webclient/System/BaseControlImpl";
import { CertificateSettingsView } from "@docsvision/webclient/Platform/CertificateSettingsView";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { $CloudSignature } from "@docsvision/webclient/BackOffice/$CloudSignature";
export declare class CertificateSettingsParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления. */
    standardCssClass?: string;
    services?: $SignatureMethodsController & $CryptoPro & $ApplicationSettings & $CloudSignature & $SignatureController & $MessageBox & $Layout & Optional<$CertificateSettingsOptions> & $WebViewIOSEnabled & $DeviceType;
}
/** Сервис для переопределения реализации CertificateSettings */
export interface ICertificateSettingsOptions {
    getCertificateSettingsView(params: CertificateSettingsParams): CertificateSettingsView;
    getCertificateSettingsLogic(params: CertificateSettingsParams): CertificateSettingsLogic;
}
export declare type $CertificateSettingsOptions = {
    certificateSettingsOptions: ICertificateSettingsOptions;
};
export declare const $CertificateSettingsOptions: string | ((model?: $CertificateSettingsOptions) => ICertificateSettingsOptions);
export interface ICertificateSettingsState extends BaseControlImplState, CertificateSettingsParams, ICertificateSettingsLogicOptions {
    logic: CertificateSettingsLogic;
    view: CertificateSettingsView;
}
export interface CertificateSettingsState extends ICertificateSettingsState {
}
/**
 * Класс элемента управления Настройки сертификата в профиле.
 */
export declare class CertificateSettings extends BaseControl<CertificateSettingsParams, ICertificateSettingsState> {
    construct(): void;
    protected createParams(): CertificateSettingsParams;
    protected createImpl(): ControlImpl;
    renderControl(): JSX.Element;
}
