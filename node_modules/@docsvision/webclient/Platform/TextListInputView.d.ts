/// <reference types="react" />
import { ClearButton } from "@docsvision/webclient/Platform/ClearButton";
import { ListContent } from "@docsvision/webclient/Platform/ListContent";
import { ListContentHightlight } from "@docsvision/webclient/Platform/ListContentHightlight";
import { ListEmpty } from "@docsvision/webclient/Platform/ListEmpty";
import { ListEmptySearchIcon } from "@docsvision/webclient/Platform/ListEmptySearchIcon";
import { ListItem } from "@docsvision/webclient/Platform/ListItem";
import { ListLoading } from "@docsvision/webclient/Platform/ListLoading";
import { ListSearchIcon } from "@docsvision/webclient/Platform/ListSearchIcon";
import { ListSlot } from "@docsvision/webclient/Platform/ListSlot";
import { ListTotalItem } from "@docsvision/webclient/Platform/ListTotalItem";
import { TextListInputWrapper } from "@docsvision/webclient/Platform/TextListInputWrapper";
export declare class TextListInputView {
    listInput: 
import("react").ForwardRefExoticComponent<Pick<
 | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "isScrollable" | "isDate"> & 
import("react").RefAttributes<HTMLDivElement>>;
    clearButton: typeof ClearButton;
    textInput: 
import("react").ForwardRefExoticComponent<Pick<
 | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "accept" | "alt" | "capture" | "checked" | "enterKeyHint" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "list" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "size" | "src" | "step"> & 
import("react").RefAttributes<HTMLInputElement>>;
    wrapper: typeof TextListInputWrapper;
    content: typeof ListContent;
    item: typeof ListItem;
    checkbox: 
import("react").ForwardRefExoticComponent<Pick<
 | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "accept" | "alt" | "capture" | "checked" | "enterKeyHint" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "list" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "size" | "src" | "step"> & 
import("react").RefAttributes<HTMLInputElement>>;
    empty: typeof ListEmpty;
    icon: typeof ListEmptySearchIcon;
    slot: typeof ListSlot;
    searchIcon: typeof ListSearchIcon;
    total: typeof ListTotalItem;
    light: typeof ListContentHightlight;
    magnifyIcon: (props: 
import("@docsvision/web/icons/MagnifyIcon").IMagnifyIconProps) => JSX.Element;
    loading: typeof ListLoading;
}
