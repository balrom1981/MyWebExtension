import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { GridFilterItemImpl, IGridFilterItemState } from "@docsvision/webclient/Platform/GridFilterItemImpl";
import { IGridFilterItemControl } from "@docsvision/webclient/Platform/IGridFilterItemControl";
import { Panel } from "@docsvision/webclient/Platform/Panel";
import { $DeviceType } from "@docsvision/webclient/StandardServices";
import { BaseControlParams } from "@docsvision/webclient/System/BaseControl";
/**
 * Содержит публичные свойства элемента управления [GridFilterItem]{@link GridFilterItem}.
 */
export declare class GridFilterItemParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления. */
    standardCssClass?: string;
    /** Включен ли параметр в поиск или нет. */
    filterItemEnabled?: boolean;
    /** Имя столбца фильтрации. */
    columnName?: string;
    /** Заголовок фильтра. */
    header?: string;
    /** Введенное значение фильтра. */
    filterItemValue?: string;
    /** Тип данных столбца. */
    columnType?: GenModels.ColumnType;
    /** Состояние панели. */
    expanded?: boolean;
    services?: $DeviceType;
}
/**
 * Класс элемента управления для отображения значения фильтра в виде раскрывающейся панели.
 */
export declare class GridFilterItem extends Panel<GridFilterItemParams, IGridFilterItemState> implements IGridFilterItemControl {
    get isGridFilterItem(): boolean;
    /** @internal */
    init(): void;
    /** Веденое пользователем значение параметра. */
    get filterItemValues(): string[];
    set filterItemValues(val: string[]);
    /** Имя параметра, которое будет передано в поисковый запрос. */
    get columnName(): string;
    /** Содержит false если ползователь исключил условие из поиска. */
    get filterItemEnabled(): boolean;
    set filterItemEnabled(val: boolean);
    /** Тип данных столбца */
    get columnType(): GenModels.ColumnType;
    /** Значение дочернего элемента управления, отвечающего за ввод значения фильтра. */
    get controlValue(): unknown;
    set controlValue(val: unknown);
    /** Состояние панели */
    get filterItemExpanded(): boolean;
    set filterItemExpanded(val: boolean);
    /** @internal */
    protected createParams(): GridFilterItemParams;
    /** @internal */
    protected createImpl(): GridFilterItemImpl;
}
