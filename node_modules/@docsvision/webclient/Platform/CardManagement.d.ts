import { $LayoutCardController, $LayoutRowController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { CardManagementImpl, ICardManagementState } from "@docsvision/webclient/Platform/CardManagementImpl";
import { $ApplicationSettings } from "@docsvision/webclient/StandardServices";
import { BaseControl, BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { $Layout } from "@docsvision/webclient/System/$Layout";
import { $CardId, $CardInfo, $EditOperationStore } from "@docsvision/webclient/System/LayoutServices";
import { $Router } from "@docsvision/webclient/System/$Router";
import { $MessageWindow } from "@docsvision/web/components/modals/message-box";
/**
 * Содержит публичные свойства элемента управления [Управление карточкой]{@link CardManagement}.
 */
export declare class CardManagementParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /**
     * Флаг, указывающий на возможность изменения карточки:
     * true - изменение разрешено (разрешена настроенная операция редактирования),
     * false - изменение не разрешено.
     */
    canEdit?: boolean;
    /**
     * Флаг, указывающий на возможность удаления карточки:
     * true - удаление разрешено (разрешена операция удаления карточки),
     * false - удаление не разрешено.
     */
    canDelete?: boolean;
    adminPanelMessageCardsIds?: GenModels.AdminPanelMessageModel[];
    services?: $LayoutCardController & $LayoutRowController & $EditOperationStore & $Layout & $CardId & $Router & $CardInfo & $ApplicationSettings & $MessageWindow;
}
/**
 * Класс элемента управления Управление карточкой.
 *
 * Добавляет в web-разметку автоматически скрываемые кнопки удаления, изменения и обновления карточки.
 */
export declare class CardManagement extends BaseControl<CardManagementParams, ICardManagementState> {
    protected construct(): void;
    protected createParams(): CardManagementParams;
    /**
     * Загружает данные карточки с сервере и обновляет отображаемое содержимое.
     */
    refresh(): void;
    /**
     * Удаляет текущую карточку.
     */
    delete(): Promise<void>;
    /**
     * Переоткрывает текущую карточку в режиме редактирования.
     */
    edit(): void;
    private set bindingEditOperation(value);
    private set adminPanelMessageCardsIds(value);
    /** @internal */
    createImpl(): CardManagementImpl;
}
