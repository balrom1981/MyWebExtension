import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { IChartData, IDiagramLogic, QueryKind, IParsedModel, IPointConfig, IApexChart, IDiagramRequestStrategy, ParseDiagramModel, ChartClass } from '@docsvision/webclient/Platform/IDiagramModels';
import { ComponentLogic } from '@docsvision/web/core/component';
import { DiagramParams } from '@docsvision/webclient/Platform/DiagramOptions';
import { MutableRefObject } from 'react';
import { DiagramRequestFolderStrategy, DiagramRequestSearchStrategy } from '@docsvision/webclient/Platform/Strategies';
export declare class DiagramLogic extends ComponentLogic<DiagramParams> {
    domain: 
import("effector").Domain;
    $options: 
import("effector").Store<IDiagramLogic>;
    $queryKind: 
import("effector").Store<QueryKind>;
    getRequestStrategy: (options: DiagramParams) => DiagramRequestFolderStrategy | DiagramRequestSearchStrategy;
    renderDiagramFx: 
import("effector").Effect<IApexChart, void, Error>;
    goToFolderFx: 
import("effector").Effect<IPointConfig, void, Error>;
    private applyFiltersToFolder;
    initializeOptions(): void;
    $chartInstance: 
import("effector").Store<IApexChart>;
    $chartLib: 
import("effector").Store<any>;
    $colorsObject: 
import("effector").Store<{
        theme: object;
        colors: string[];
    }>;
    $diagramInitializeParams: 
import("effector").Store<{
        title?: undefined;
        legend?: undefined;
        type?: undefined;
        height?: undefined;
    } | {
        title: {
            text: string;
            align: string;
        };
        legend: {
            show: boolean;
            position: string;
            horizontalAlign: string;
        };
        type: 
import("./Functions/GetDiagramType").IDiagramTypeOptions;
        height: number;
    }>;
    setChartRef: 
import("effector").Event<MutableRefObject<HTMLDivElement>>;
    $chartRef: 
import("effector").Store<MutableRefObject<HTMLDivElement>>;
    initializeChartFx: 
import("effector").Effect<MutableRefObject<HTMLDivElement>, {
        lib: ChartClass;
        data: ParseDiagramModel;
    }, Error>;
    diagramInitialize(): void;
    $diagramType: 
import("effector").Store<GenModels.DiagramType>;
    $chartData: 
import("effector").Store<IChartData>;
    $gridModel: 
import("effector").Store<ParseDiagramModel>;
    $parsedGridModel: 
import("effector").Store<IParsedModel>;
    setStrategy: 
import("effector").Event<IDiagramRequestStrategy>;
    $strategy: 
import("effector").Store<IDiagramRequestStrategy>;
    chartMiddlewaresInitialize(): void;
    init(options: DiagramParams): void;
}
