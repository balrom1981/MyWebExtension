import { $GridController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { IFolderRouteData } from "@docsvision/webclient/Platform/IFolderRouteData";
import { $WebFrameContext } from '@docsvision/webclient/Platform/$WebFrameContext';
import { IRouteHandler } from "@docsvision/webclient/System/IRouteHandler";
import { RouteHandleResult } from "@docsvision/webclient/System/RouteHandleResult";
import { RouteType } from "@docsvision/webclient/System/RouteType";
import { $LayoutManager } from '@docsvision/webclient/System/$LayoutManager';
import { $Router } from "@docsvision/webclient/System/$Router";
/** @internal */
export declare class DefaultFolderRouteHandler implements IRouteHandler<IFolderRouteData> {
    private services;
    private gridLocationName;
    name: string;
    private layoutSearchParametersDialog;
    private lastParameters;
    constructor(services: $GridController & $LayoutManager & $WebFrameContext & $Router);
    prepareRouteDataLoad(knownRouteData: Partial<IFolderRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    loadRouteData(knownRouteData: Partial<IFolderRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    mountRoute(data: IFolderRouteData, routeType: RouteType): Promise<RouteHandleResult>;
    unmountRoute(data: IFolderRouteData, routeType: RouteType): Promise<{}>;
    cancelRouteProcessing(): Promise<{}>;
    /**
     * Load search parameters stuff
     * @param folderInfo Folder info
     * @param folderView  Folder view
     */
    private loadSearchParametres;
}
