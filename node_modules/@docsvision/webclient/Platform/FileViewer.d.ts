import { $FilePreviewServices, FilePreviewParams } from '@docsvision/webclient/Platform/FilePreview';
import { FilePreviewImpl, FilePreviewState, IFilePreviewState } from '@docsvision/webclient/Platform/FilePreviewImpl';
import { SyntheticEvent } from 'react';
export interface IFileViewerConstructor {
    new (state: IFilePreviewState, props: FilePreviewParams, component: FilePreviewImpl): FileViewer;
}
export interface IFileViewerIframeElements {
    errorWrapperId: string;
    downloadButtonsId: string[];
}
export declare abstract class FileViewer {
    abstract services: $FilePreviewServices;
    component: FilePreviewImpl;
    constructor(state: FilePreviewState, props: FilePreviewParams, component: FilePreviewImpl);
    getViewerUrl(): void;
    getPreview(): void;
    onFrameLoaded: (ev: SyntheticEvent<HTMLIFrameElement>, elements?: {
        errorWrapperId: string;
        downloadButtonsId: any[];
    }) => void;
    processFrameLoadErrors(iframe: HTMLIFrameElement, elements: IFileViewerIframeElements): void;
    addObserver(frameDoc: Document, errorWrapperId: string): void;
    addDownloadButtonHandlers(frameDoc: Document, downloadButtonsId: string[]): void;
}
