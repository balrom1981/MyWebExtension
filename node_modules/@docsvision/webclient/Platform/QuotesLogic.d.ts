/// <reference types="react" />
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { IQuotesProps } from "@docsvision/webclient/Platform/Quotes";
import { ComponentLogic } from "@docsvision/web/core/component";
export declare const LIMIT_QUOTES_FILES = 2;
export declare const LIMIT_QUOTES_FILES_EXPANDED = 5;
export declare const LIMIT_QUOTES_EXPANDED = 30;
export declare class QuotesLogic extends ComponentLogic<IQuotesProps> {
    domain: 
import("effector").Domain;
    $fileList: 
import("effector").Store<GenModels.CardQuotes>;
    setFileList: 
import("effector").Event<GenModels.CardQuotes>;
    $moreFilesExpanded: 
import("effector").Store<boolean>;
    setMoreFilesExpanded: 
import("effector").Event<boolean | void>;
    $modalShown: 
import("effector").Store<boolean>;
    setModalShown: 
import("effector").Event<boolean>;
    switchModalShown: 
import("effector").Event<void>;
    $activeFile: 
import("effector").Store<GenModels.FileQuotes>;
    setActiveFile: 
import("effector").Event<GenModels.FileQuotes>;
    limitFiles: number;
    showMoreQuotes: 
import("effector").Event<GenModels.FileQuotes>;
    downloadFile: 
import("effector").Event<GenModels.FileQuotes>;
    showMoreFiles: 
import("effector").Event<void>;
    showFilePreview: 
import("effector").Event<GenModels.FileQuotes>;
    openFileInExternalEditor: 
import("effector").Event<GenModels.FileQuotes>;
    setModalQuoteRef: 
import("effector").Event<
import("react").MutableRefObject<HTMLDivElement>>;
    $modalQuoteRef: 
import("effector").Store<
import("react").MutableRefObject<HTMLDivElement>>;
    init(): void;
}
