import { BarcodeSearchButtonParams } from '@docsvision/webclient/Platform/BarcodeSearchButton';
import { BaseControlState } from '@docsvision/webclient/System/BaseControl';
import { BaseControlImpl } from '@docsvision/webclient/System/BaseControlImpl';
import React from 'react';
/** @internal */
export interface IBarcodeSearchButtonState extends BarcodeSearchButtonParams, BaseControlState {
    /** Значение штрих-кода. */
    barcode: string;
    isOpened: boolean;
    barcodeSearchPanel: HTMLElement;
    barcodeSearchInput: HTMLInputElement;
    barcodeSearchButton: HTMLElement;
    showAllBarcodePagesButton: HTMLElement;
    clearElement: HTMLElement;
    isMobile: boolean;
    paddingButton: string;
    widthButton: number;
    clickElement: boolean;
    endStreamReading: boolean;
    streamReadingBarcodes: unknown[];
}
export interface BarcodeSearchButtonState extends IBarcodeSearchButtonState {
}
/** @internal */
export declare class BarcodeSearchButtonImpl extends BaseControlImpl<BarcodeSearchButtonParams, IBarcodeSearchButtonState> {
    constructor(props: BarcodeSearchButtonParams, state: IBarcodeSearchButtonState);
    private getCreateButton;
    private getBackButton;
    protected onKeyPress(ev: React.KeyboardEvent): void;
    protected onInput(ev: React.KeyboardEvent<HTMLInputElement>): void;
    protected onSearchButtonClick(ev: React.MouseEvent): void;
    protected onButtonKeyDown(ev: React.KeyboardEvent): void;
    protected onButtonKeyUp(ev: React.KeyboardEvent): boolean;
    protected onClearButtonClick(ev: React.MouseEvent): void;
    protected onShowAllBarcodePagesButtonClick(ev: React.MouseEvent): void;
    private isSlidePanel;
    protected searchPanelAction(): void;
    protected onSearchButtonMouseDown(ev: React.MouseEvent): void;
    protected onClearButtonMouseDown(ev: React.MouseEvent): Promise<void>;
    protected mobileButtonsHide(): void;
    protected mobileButtonsShow(): void;
    protected handleBlur(ev: React.FocusEvent): void;
    protected searchCardIdByBarcode(): void;
    componentDidMount(): void;
    renderControl(): JSX.Element;
}
