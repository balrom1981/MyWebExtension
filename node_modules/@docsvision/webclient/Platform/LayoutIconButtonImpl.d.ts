import { LayoutIconButtonParams } from "@docsvision/webclient/Platform/LayoutIconButton";
import { BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { BaseControlImpl } from "@docsvision/webclient/System/BaseControlImpl";
import React from "react";

/** @internal */
export interface ILayoutIconButtonState extends LayoutIconButtonParams, BaseControlState {
    loading: boolean;
}
export interface LayoutIconButtonState extends ILayoutIconButtonState {
}
/** @internal */
export declare type LayoutIconButtonImplState = ILayoutIconButtonState;
/** @internal */
export declare class LayoutIconButtonImpl extends BaseControlImpl<LayoutIconButtonParams, ILayoutIconButtonState> {
    constructor(props: LayoutIconButtonParams, state: ILayoutIconButtonState);
    performClick(event?: React.MouseEvent): void;
    /** Переопределяет базовый метод, отменяя его логику (для данного контрола она отлична от базовой версии). */
    protected handleClick(event: React.MouseEvent): void;
    renderControl(): JSX.Element;
}
