import { NumberImpl, INumberState } from "@docsvision/webclient/Platform/NumberImpl";
import { $ApplicationSettings } from '@docsvision/webclient/StandardServices';
import { InputBasedControl, InputBasedControlParams } from "@docsvision/webclient/System/InputBasedControl";
import { $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { Optional } from "@docsvision/web/core/services";
/**
 * Содержит публичные свойства элемента управления [Число]{@link NumberControl}.
 */
export declare class NumberParams extends InputBasedControlParams<number> {
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Количество символов в дробной части. Если значение = NumberImpl.INFINITY_FRACTION_DIGITS, то можно писать сколько угодно чисел после запятой. */
    fractionDigits?: number;
    /** Использовать разделитель групп разрядов */
    digitSeparators?: boolean;
    /** Флаг, показывающий, может ли число быть  отрицательным */
    negativeFlag?: boolean;
    /** Максимально допустимое число вводимых символов */
    maxValue?: number;
    /** Минимально допустимое число вводимых символов */
    minValue?: number;
    services?: Optional<$EditOperationStore> & Optional<$LayoutInfo> & $ApplicationSettings;
}
/**
 * Класс элемента управления Число.
 */
export declare class NumberControl extends InputBasedControl<number, NumberParams, INumberState> {
    /** @internal */
    protected createParams(): NumberParams;
    /** @internal */
    protected getServices(): Partial<$EditOperationStore> & Partial<$LayoutInfo> & $ApplicationSettings;
    /** @internal */
    private set RealNumberBinding(value);
    /** @internal */
    protected getBindings(): IBindingResult<unknown>[];
    /** @internal */
    protected createImpl(): NumberImpl;
}
