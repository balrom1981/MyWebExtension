import { BlockParams } from "@docsvision/webclient/Platform/Block";
import { PanelImpl, IPanelState } from "@docsvision/webclient/Platform/PanelImpl";
import { CancelableEventArgs } from "@docsvision/webclient/System/CancelableEventArgs";
import { IEventArgs } from "@docsvision/webclient/System/IEventArgs";
import React from "react";
/** @internal */
export interface IBlockState extends IPanelState, BlockParams {
}
export interface BlockState extends IBlockState {
}
/** @internal */
export declare class BlockImpl extends PanelImpl<BlockParams, IBlockState> {
    isAllBlocksExpanded: boolean;
    constructor(props: BlockParams, state: IBlockState);
    UNSAFE_componentWillMount(): void;
    protected handleHeaderClick(event: React.MouseEvent<unknown>): void;
    toggleCollapsed(): CancelableEventArgs<IEventArgs>;
    protected getCssClass(): string;
    protected onCollapsed(): void;
    protected onExpanded(): void;
    protected getItemsStyle(): React.CSSProperties;
    protected getItemsStyleClassName(): "alignment-left" | "alignment-right";
    set isCollapsed(value: boolean);
    onToggleButtonClick: (e: any) => void;
    renderControl(): JSX.Element;
}
