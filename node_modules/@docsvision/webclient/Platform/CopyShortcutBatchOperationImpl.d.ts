import { BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { BaseControlImpl } from "@docsvision/webclient/System/BaseControlImpl";
import React from 'react';
import { FolderContent } from "@docsvision/webclient/Platform/FolderContent";
import { IBatchOperationInfo } from "@docsvision/webclient/Platform/$BatchOperations";
import { CopyShortcutBatchOperationParams } from '@docsvision/webclient/Platform/CopyShortcutBatchOperation';
export interface ICopyShortcutBatchOperationState extends CopyShortcutBatchOperationParams, BaseControlState {
}
export interface CopyShortcutBatchOperationState extends ICopyShortcutBatchOperationState {
}
/**
 * Класс элемента управления CopyShortcutBatchOperationImpl.
 */
export declare class CopyShortcutBatchOperationImpl extends BaseControlImpl<CopyShortcutBatchOperationParams, ICopyShortcutBatchOperationState> {
    private folderModalHost;
    private folderContent;
    private folderInTree;
    constructor(state: any, props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    onSelectionChanged: () => void;
    getOperationInfo(): IBatchOperationInfo;
    isVisible(): boolean;
    isFolderAvailable(): boolean;
    attachFolderContent: (el: FolderContent) => void;
    onCopyShortcutsBatchOperationButtonClick(): Promise<void>;
    closeWindow(): void;
    private copyCards;
    private getFolders;
    private getButtonText;
    private setFolderInTree;
    protected renderFolderWindow(): React.ReactNode;
    protected renderControl(): JSX.Element;
}
