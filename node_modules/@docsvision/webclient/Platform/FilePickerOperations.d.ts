import { $FilePickerController, $LayoutFileController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { $FileController } from '@docsvision/webclient/Legacy/FileController';
import { FilePickerAccessState } from '@docsvision/webclient/Platform/FilePickerMenuItemsView';
import { FilePickerOperationsAvailability } from '@docsvision/webclient/Platform/FilePickerOperationsAvailability';
import { $FileDownload } from '@docsvision/webclient/Platform/$FileDownload';
import { $WindowLocation } from '@docsvision/webclient/Platform/$WindowLocation';
import { $FilePickerUpload } from '@docsvision/webclient/Platform/IFilePickerUploadService';
import { $CardId } from '@docsvision/webclient/System/LayoutServices';
import { EventEmitter } from '@docsvision/webclient/System/EventEmitter';
import { $MessageBox } from '@docsvision/webclient/System/$MessageBox';
import { $FilePreviewServices } from '@docsvision/webclient/Platform/FilePreview';
import { $ApplicationSettings } from '@docsvision/webclient/StandardServices';
export declare class FilePickerOperations {
    open(file: GenModels.FileCardModel, accessState: FilePickerAccessState, events: EventEmitter, services: $MessageBox & $WindowLocation & $ApplicationSettings): Promise<void>;
    preview(file: GenModels.FileCardModel, version: GenModels.FileCardVersionModel, access: FilePickerOperationsAvailability, events: EventEmitter, onDownloadClick: () => void, services: $FileController & $LayoutFileController & $CardId & $FilePreviewServices): Promise<void>;
    showCommentsDialog(file: GenModels.FileCardModel, version: GenModels.FileCardVersionModel, enableAddComments: boolean, dialogOpenEvents: EventEmitter, dialogCloseEvents: EventEmitter, addCommentEvents: EventEmitter, deleteCommentEvents: EventEmitter, services: $LayoutFileController & $CardId): Promise<void>;
    addFileVersion(file: GenModels.FileCardModel, inputContainer: HTMLElement, services: $MessageBox & $FilePickerUpload): Promise<File>;
    replaceFile(file: GenModels.FileCardModel, inputContainer: HTMLElement, services: $MessageBox & $FilePickerUpload): Promise<File>;
    openSelectFileDialog(file: GenModels.FileCardModel, inputContainer: HTMLElement, services: $MessageBox & $FilePickerUpload): Promise<File>;
    download(file: GenModels.FileCardModel, version: GenModels.FileCardVersionModel | null, events: EventEmitter, logInfo: GenModels.LogInfo, services: $FileDownload & $FilePickerController): Promise<void>;
    saveAs(file: GenModels.FileCardModel, version: GenModels.FileCardVersionModel | null, events: EventEmitter, logInfo: GenModels.LogInfo, services: $FilePickerController & $FileDownload): Promise<Blob>;
}
