import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { Panel } from "@docsvision/webclient/Platform/Panel";
import { BaseControlParams } from "@docsvision/webclient/System/BaseControl";
import { ICompleteTaskConditionsTabletate, CompleteTaskConditionImpl } from '@docsvision/webclient/Platform/CompleteTaskConditionImpl';
import { ICompleteTaskCondition } from '@docsvision/webclient/Platform/ICompleteTaskCondition';
import { InputBasedControl, InputBasedControlParams } from '@docsvision/webclient/System/InputBasedControl';
import { InputBasedControlState } from '@docsvision/webclient/System/InputBasedControlImpl';
/**
 * Содержит публичные свойства элемента управления [CompleteTaskCondition]{@link CompleteTaskCondition}.
 */
export declare class CompleteTaskConditionParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления. */
    standardCssClass?: string;
    /** Описание контрола параметра завершения задания */
    controlInfo: GenModels.ControlsInfoModel;
    services?: any;
}
/**
 * Класс элемента управления для отображения параметров поискового запроса и взаимодействия с контролом ввода значения поискового запроса.
 */
export declare class CompleteTaskCondition extends Panel<CompleteTaskConditionParams, ICompleteTaskConditionsTabletate> implements ICompleteTaskCondition {
    /** Служит для отличения контрола от других элементов управления. */
    get isCompleteTaskCondition(): boolean;
    /** Введеное пользователем значение параметра. */
    get completeParameterValue(): string;
    /** Имя параметра завершения. */
    get completeParameterAlias(): string;
    get completeParameterId(): string;
    /** Валидация параметра завершения. */
    validateParameter(): boolean;
    init(): void;
    /** Возвращает дочерний контрол, служащий для ввода значения параметра завершения. */
    getValueControl(): InputBasedControl<unknown, InputBasedControlParams<unknown>, InputBasedControlState<unknown>>;
    /** @internal */
    protected createParams(): CompleteTaskConditionParams;
    /** @internal */
    protected createImpl(): CompleteTaskConditionImpl;
}
