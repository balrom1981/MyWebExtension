import { IColumn, IRow, ITableData, ITableDataLoadRequest } from "@docsvision/web/components/table/interfaces";
import { SortDirection } from "@docsvision/web/components/table/plugins/sort";
import { IFilterActiveColumn } from "@docsvision/web/components/table/plugins/filter";
import { ICustomContextMenuBlock, IDataItemProvider, IParamsItemProvider } from "@docsvision/webclient/Platform/$ContextMenuOptions";
import { IGrouping, IGroupingPathItem, ILoadGroupingItemsOptions } from '@docsvision/web/components/table/plugins/grouping';
import { Store } from 'effector';
import { IComposition } from "@docsvision/web/core/composition";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
export interface IFolderGridService {
    $groupingReadonly: Store<boolean>;
    setGroupingReadonly(available: boolean): void;
    getContextMenuBlockNames: () => {
        gridOperation: string;
        textOperation: string;
        linkOperation: string;
    };
    onRowClick(row: IRow, services?: $FolderGrid, event?: MouseEvent): void;
    backgroundOpacity: number;
    newGridAvailable: boolean;
    defaultTablePresentation: GenModels.TablePresentation;
    onSortRequest(column: IColumn, sortDirection: SortDirection): Promise<void>;
    onFilterRequest(filterData: IFilterActiveColumn[]): void;
    onLoadData(data?: ITableData, options?: ITableDataLoadRequest): Promise<void>;
    getContextMenuBlocks(): ICustomContextMenuBlock[];
    getContextMenuItemProviders(params?: IParamsItemProvider<any, any>, context?: IComposition<any, any, any>): IDataItemProvider[];
    onChangeAggregateValue(items: GenModels.GridAggregateValue[]): void;
    onSearchRequest(): Promise<void>;
    onLoadGrouping(options: ILoadGroupingItemsOptions): Promise<IGrouping>;
    onReloadWithNewSettings(): Promise<void>;
    getGroupingAvailable(): boolean;
    onGroupingPathChanged(path: IGroupingPathItem[]): void;
    refreshPage(): void;
}
export declare type $FolderGrid = {
    folderGrid: IFolderGridService;
};
export declare const $FolderGrid: string | ((model?: $FolderGrid) => IFolderGridService);
