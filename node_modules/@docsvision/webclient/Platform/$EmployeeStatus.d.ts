import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
import { BasicEvent } from '@docsvision/webclient/System/BasicEvent';
export interface IEmployeeStatusInfo {
    employeeId: string;
    status: GenModels.StaffEmployeeStatus;
}
export interface IEmployeeInfo {
    employeeModel: GenModels.EmployeeStatusModel;
}
/** Сервис для получения актуального статуса сотрудника. */
export interface IEmployeeStatusService {
    readonly employeeStatusChanged: BasicEvent<IEmployeeStatusInfo>;
    setEmployeeStatus(employeeId: string, status: GenModels.StaffEmployeeStatus): any;
    /** Выполняет запрос вызов {@see getEmployeeStatusUnobtrusively} для текущего сотрудника. */
    getCurrentEmployeeStatusUnobtrusively(): Promise<GenModels.StaffEmployeeStatus>;
    /** Выполняет запрос вызов {@see getEmployeeDisplayNameUnobtrusively} для текущего сотрудника. */
    getCurrentEmployeeDisplayNameUnobtrusively(): Promise<string>;
    /** Получает информацию о текущем сотруднике. */
    getCurrentEmployeeStatusModelUnobtrusively(): Promise<GenModels.EmployeeStatusModel>;
    /** Выполняет запрос на обновление статуса сотрудника с отсрочкой, чтобы не мешать загрузке основного содержимого страницы. */
    getEmployeeStatusUnobtrusively(employeeId: string): Promise<GenModels.StaffEmployeeStatus>;
    /** Выполняет запрос на обновление имени сотрудника с отсрочкой, чтобы не мешать загрузке основного содержимого страницы. */
    getEmployeeDisplayNameUnobtrusively(employeeId: string): Promise<any>;
    /** Получает информацию о сотруднике. */
    getEmployeeStatusModelUnobtrusively(employeeId: string): Promise<GenModels.EmployeeStatusModel>;
    /** Сбрасывает полученный ранее статус и имена сотрудников, так что при следующем обращении они будут получены с сервера. */
    resetCache(employeeId?: string): void;
}
/** Сервис для получения актуального статуса сотрудника. */
export declare type $EmployeeStatus = {
    employeeStatus: IEmployeeStatusService;
};
export declare const $EmployeeStatus: string | ((model?: $EmployeeStatus) => IEmployeeStatusService);
