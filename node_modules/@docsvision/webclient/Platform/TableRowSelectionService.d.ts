import { $LayoutController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { ITableRowSelection } from "@docsvision/webclient/Platform/$TableRowSelection";
import { ITableRowModel } from "@docsvision/webclient/Platform/ITableRowModel";
import { BasicEvent } from "@docsvision/webclient/System/BasicEvent";
import { IEventArgs } from "@docsvision/webclient/System/IEventArgs";
import { $LayoutManager } from "@docsvision/webclient/System/$LayoutManager";
import { $CheckboxService } from "@docsvision/web/components/table/plugins/checkbox";
import { $Domain } from "@docsvision/web/core/state-management";
export declare class TableRowSelectionService implements ITableRowSelection {
    private services;
    private $rowSelection;
    constructor(services: $CheckboxService & $Domain & $LayoutController & $LayoutManager);
    get selection(): {
        selectedRows: ITableRowModel[];
    };
    clearSelection(cardIds?: string[]): void;
    selectionChanged: BasicEvent<IEventArgs>;
}
export declare type $TableRowSelectionService = {
    tableRowSelection: ITableRowSelection;
};
export declare const $TableRowSelectionService: string | ((model?: $TableRowSelectionService) => ITableRowSelection);
