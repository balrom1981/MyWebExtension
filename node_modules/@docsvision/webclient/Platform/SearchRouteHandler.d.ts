import { $GridController } from '@docsvision/webclient/Generated/DocsVision.WebClient.Controllers';
import { ISearchRouteData } from "@docsvision/webclient/Platform/ISearchRouteData";
import { $WebFrameContext } from '@docsvision/webclient/Platform/$WebFrameContext';
import { IRouteHandler } from "@docsvision/webclient/System/IRouteHandler";
import { RouteHandleResult } from "@docsvision/webclient/System/RouteHandleResult";
import { RouteType } from "@docsvision/webclient/System/RouteType";
import { $LayoutManager } from '@docsvision/webclient/System/$LayoutManager';
import { $SearchPanel } from '@docsvision/webclient/Legacy/$SearchPanel';
import { $CompanyLogo } from "@docsvision/webclient/Platform/$CompanyLogo";
/** @internal */
export declare class SearchRouteHandler implements IRouteHandler<ISearchRouteData> {
    private services;
    name: string;
    private gridLocationName;
    constructor(services: $GridController & $LayoutManager & $WebFrameContext & $SearchPanel & $CompanyLogo);
    prepareRouteDataLoad(routeData: Partial<ISearchRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    loadRouteData(routeData: Partial<ISearchRouteData>, routeType: RouteType): Promise<RouteHandleResult>;
    mountRoute(data: ISearchRouteData, routeType: RouteType): Promise<RouteHandleResult>;
    unmountRoute(data: ISearchRouteData, routeType: RouteType): Promise<{}>;
}
