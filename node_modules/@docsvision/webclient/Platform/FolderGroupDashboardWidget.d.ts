/// <reference types="react" />
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $Folders } from '@docsvision/webclient/Legacy/$Folders';
import { FolderGroupDashboardWidgetImpl, IFolderGroupDashboardWidgetState } from "@docsvision/webclient/Platform/FolderGroupDashboardWidgetImpl";
import { Panel, PanelParams } from "@docsvision/webclient/Platform/Panel";
import { $UnreadCounter } from '@docsvision/webclient/Platform/$UnreadCounter';
import { $Router } from '@docsvision/webclient/System/$Router';
/**
 * @internal
 * Содержит публичные свойства элемента управления [FolderGroupDashboardWidget]{@link FolderGroupDashboardWidget}.
 */
export declare class FolderGroupDashboardWidgetParams extends PanelParams {
    /** Текст метки. */
    text: string;
    /** Стандартный CSS класс со стилями элемента управления */
    standardCssClass?: string;
    /** Отступы вокруг виджета */
    paddings?: boolean;
    headerFolderId?: string;
    headerFolderInfo: GenModels.FolderNode;
    headerFolderUnreadCount?: number;
    color?: string;
    unreadCount?: number;
    opacity?: number;
    forceVirtualFolderSearch?: boolean;
    services?: $UnreadCounter & $Folders & $Router;
}
/** @internal */
export declare class FolderGroupDashboardWidget extends Panel<FolderGroupDashboardWidgetParams, IFolderGroupDashboardWidgetState> {
    createParams(): FolderGroupDashboardWidgetParams;
    init(): void;
    deinit(): void;
    protected set headerFolderInfo(info: GenModels.FolderNode);
    private set textResourceKey(value);
    protected set forceVirtualFolderSearch(val: string | boolean);
    onUnreadCountChanged: () => void;
    addUnreadCountRequest(): void;
    protected createImpl(): FolderGroupDashboardWidgetImpl<Readonly<FolderGroupDashboardWidgetParams> & Readonly<{
        children?: 
import("react").ReactNode;
    }>, IFolderGroupDashboardWidgetState>;
}
