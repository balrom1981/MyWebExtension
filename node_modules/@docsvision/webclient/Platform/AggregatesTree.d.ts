/// <reference types="react" />
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { IAggregatesState, IAggregate, ISelectItemData } from "@docsvision/webclient/Platform/IAggregates";
import { IComposition } from "@docsvision/web/core/composition";
import { IAggregatesTextResources } from "@docsvision/webclient/Platform/AggregatesCheckbox";

export interface IAggregateTreeProps {
    /** Дерево группировки. Значение null означает, что данные еще в процессе загрузки. */
    aggregates?: IAggregate[] | null;
    textResources: IAggregatesTextResources;
    aggregatesState?: IAggregatesState;
    composition?: IComposition;
    toggleAggregate?: (item: IAggregate) => void;
    onItemSelect?: (data: ISelectItemData) => void;
    onLoadMoreItems?: (aggregates: GenModels.GridAggregateModel[]) => void;
}
export declare const AggregatesTree: ({ aggregates, aggregatesState, ...props }: IAggregateTreeProps) => JSX.Element;
