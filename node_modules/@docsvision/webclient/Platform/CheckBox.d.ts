import { CheckBoxImpl, ICheckBoxState } from "@docsvision/webclient/Platform/CheckBoxImpl";
import { CheckboxHideMode } from "@docsvision/webclient/Platform/CheckboxHideMode";
import { IImageModel } from "@docsvision/webclient/Platform/ImageModel";
import { InputBasedControl, InputBasedControlParams } from "@docsvision/webclient/System/InputBasedControl";
import { $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { IBindingResult } from "@docsvision/webclient/System/IBindingResult";
import { $LabelWidth } from '@docsvision/webclient/System/$LabelWidth';
import { Optional } from '@docsvision/web/core/services';
export declare type $CheckBoxServices = $LayoutInfo & $EditOperationStore & Optional<$LabelWidth>;
/**
 * Содержит публичные свойства элемента управления [Флажок]{@link CheckBox}.
 */
export declare class CheckBoxParams extends InputBasedControlParams<boolean> {
    /** Стандартный CSS класс со стилями элемента управления. */
    standardCssClass?: string;
    /** Текст, отображаемый в элементе управления в режиме "Без редактирования", если значение равно `true`. */
    yesText?: string;
    /** Текст, отображаемый в элементе управления в режиме "Без редактирования", если значение равно `false`. */
    noText?: string;
    /** Картинка в base64, отображаемая в элементе управления для значения `true`. */
    yesImage?: IImageModel;
    /** Картинка в base64, отображаемая в элементе управления для значения `false`. */
    noImage?: IImageModel;
    /** Режим отображения элемента управления */
    hideMode?: CheckboxHideMode;
    services?: $CheckBoxServices;
}
/**
 * Класс элемента управления Флажок.
 *
 * Добавляет в web-разметку элемент управления для изменения значение булевого типа.
 */
export declare class CheckBox extends InputBasedControl<boolean, CheckBoxParams, ICheckBoxState> {
    protected construct(): void;
    protected createParams(): CheckBoxParams;
    protected getServices(): $CheckBoxServices;
    /** @internal */
    componentDidMount(): void;
    protected onDataChanged(): void;
    private get checkBoxImpl();
    private set CheckBoxBinding(value);
    private set checkboxDefault(value);
    protected getBindings(): IBindingResult<any>[];
    /** @inheritDoc */
    canShowEditDialog(): boolean;
    /** @inheritDoc */
    showEditDialog(): Promise<never>;
    /** @inheritDoc */
    hideEditDialog(): Promise<never>;
    /** @inheritDoc */
    acceptEditDialog(): Promise<never>;
    /** @internal */
    protected createImpl(): CheckBoxImpl;
}
