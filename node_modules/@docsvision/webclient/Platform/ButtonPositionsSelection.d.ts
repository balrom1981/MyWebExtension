import { BaseControl, BaseControlParams, BaseControlState } from "@docsvision/webclient/System/BaseControl";
import { ControlImpl } from "@docsvision/webclient/System/ControlImpl";
import React from 'react';
import { $LocalStorage } from '@docsvision/webclient/System/$LocalStorage';
import { $Layout } from '@docsvision/webclient/System/$Layout';
import { $CurrentEmployeeId, $ApplicationSettings } from '@docsvision/webclient/StandardServices';
import { GenModels } from '@docsvision/webclient/Generated/DocsVision.WebClient.Models';
/**
 * Содержит публичные свойства [EmptyControlStub]{@link EmptyControlStub}.
 */
export declare class ButtonPositionsParams extends BaseControlParams {
    /** Стандартный CSS класс со стилями элемента управления. */
    standardCssClass?: string;
    /** Сервисы */
    services: $Layout & $LocalStorage & $CurrentEmployeeId & $ApplicationSettings;
    /** Выбранный порядок расположения кнопок */
    selectedOption?: GenModels.ButtonPositions;
    /** Определяет, должен ли переключатель получать фокус при переходе по Tab: `true` - должен, `false` - не должен. */
    tabStop?: boolean;
}
export interface IState extends ButtonPositionsParams, BaseControlState {
}
export interface State extends IState {
}
/**
 * Элемент управления для настройки расположения кнопок
 */
export declare class ButtonPositionsSelection extends BaseControl<ButtonPositionsParams, IState> {
    /** @internal */
    protected createParams(): ButtonPositionsParams;
    /** @internal */
    protected createImpl(): ControlImpl;
    /** @internal */
    protected getTabIndex(): -1 | 0;
    /** @internal */
    componentDidMount(): void;
    /** @internal */
    componentWillUnmount(): void;
    /** @internal */
    protected onCardSaved: () => void;
    /** @internal */
    protected onElementChange: (changeEvent: React.FormEvent) => void;
    renderControl(): JSX.Element;
}
