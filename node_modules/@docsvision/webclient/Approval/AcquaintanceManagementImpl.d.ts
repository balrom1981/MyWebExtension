/// <reference types="react" />
import { AcquaintanceManagementParams } from "@docsvision/webclient/Approval/AcquaintanceManagement";
import { StaffDirectoryItemsMultiple } from '@docsvision/webclient/BackOffice/StaffDirectoryItems';
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { DateTimePicker } from "@docsvision/webclient/Platform/DateTimePicker";
import { PanelImpl, IPanelState } from "@docsvision/webclient/Platform/PanelImpl";
export interface AcquaintanceManagementState extends AcquaintanceManagementParams, IPanelState {
    addEmptyClass: boolean;
    cardId: string;
    children: GenModels.ControlModel[];
    lastLoading: Promise<GenModels.ControlModel[]>;
    isOpened: boolean;
    receivers: StaffDirectoryItemsMultiple;
    considerationDate: DateTimePicker;
    loading: boolean;
}
/** @internal */
export declare type AcquaintanceManagementImplState = AcquaintanceManagementState;
export declare type AcquaintanceManagementImplProps = AcquaintanceManagementState;
/** @internal */
export declare class AcquaintanceManagementImpl extends PanelImpl<AcquaintanceManagementParams, AcquaintanceManagementState> {
    private emptyClass;
    constructor(props: AcquaintanceManagementParams, state: AcquaintanceManagementState);
    open(): void;
    close(): void;
    get isOpened(): boolean;
    attachReceivers(control: any): void;
    attachConsiderationDate(control: any): void;
    onMainButtonClick(): void;
    onSendClick(): void;
    onCancelClick(): void;
    protected getCssClass(): string;
    hasContent(): boolean;
    renderControl(): JSX.Element;
}
