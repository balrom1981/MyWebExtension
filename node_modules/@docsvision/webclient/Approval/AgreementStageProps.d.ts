import { StageModelWithChange } from "@docsvision/webclient/Approval/StageModelWithChange";
import { IApproverDeletionEventArgs } from "@docsvision/webclient/Approval/IApproverDeletionEventArgs";
import { IApproverEventArgs } from "@docsvision/webclient/Approval/IApproverEventArgs";
import { $EmployeeController, $LayoutRowController, $LayoutStaffController, $StaffDirectoryItemsController } from "@docsvision/webclient/Generated/DocsVision.WebClient.Controllers";
import { GenModels } from "@docsvision/webclient/Generated/DocsVision.WebClient.Models";
import { $CardInfo, $EditOperationStore, $LayoutInfo } from "@docsvision/webclient/System/LayoutServices";
import { BasicApiEvent, CancelableApiEvent } from "@docsvision/webclient/System/ApiEvent";
import { $LocalStorage } from "@docsvision/webclient/System/$LocalStorage";
import { $AgreementOptions } from '@docsvision/webclient/Approval/$AgreementOptions';
import { Optional } from '@docsvision/web/core/services';
import { $LayoutManager } from "@docsvision/webclient/System/$LayoutManager";
import { $DeviceType } from "@docsvision/web/core/system-services/environment/DeviceTypeService";
/** @internal */
export declare class AgreementStageProps {
    stage: StageModelWithChange;
    approverViewType: GenModels.ApproverViewType;
    className?: string;
    editMode?: boolean;
    getButtonName?: (operationKind: GenModels.AgreementManagementOperations) => string;
    canInterruptCurrent?: boolean;
    onInterruptClick?: Function;
    useFavourites?: boolean;
    /** Отображать ли пиктограммы типа строки исполнителя. */
    showIcons?: boolean;
    services: $StaffDirectoryItemsController & $EditOperationStore & $LayoutInfo & $LocalStorage & $LayoutManager & $LocalStorage & $EmployeeController & $CardInfo & Optional<$AgreementOptions> & $LayoutStaffController & $LayoutRowController & $DeviceType;
    /** Событие возникает при добавлении нового согласующего. */
    approverAdding: CancelableApiEvent<IApproverEventArgs>;
    /** Событие возникает при удалении согласующего. */
    approverDeleting: CancelableApiEvent<IApproverDeletionEventArgs>;
    /** Событие возникает после добавления нового согласующего. */
    approverAdded: BasicApiEvent<IApproverEventArgs>;
    /** Событие возникает после удаления согласующего. */
    approverDeleted: BasicApiEvent<IApproverDeletionEventArgs>;
}
