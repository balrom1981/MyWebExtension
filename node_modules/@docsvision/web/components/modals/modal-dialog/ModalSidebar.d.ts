import { IComponentProps } from '@docsvision/web/core/component';
import { ReactNode } from 'react';
import ModalDialogView from '@docsvision/web/components/modals/modal-dialog/ModalSidebarView';
import { IModalSidebarContainerProps } from '@docsvision/web/components/modals/modal-dialog/components/ModalSidebarContainer';
import { IStackingModalProps } from '@docsvision/web/components/modals/stacking';
import { IModalSidebarBoxProps } from '@docsvision/web/components/modals/modal-dialog/components/ModalSidebarBox';
declare type ModalSidebarPropsEx = Omit<IStackingModalProps, "visible"> & IModalSidebarContainerProps & IModalSidebarBoxProps;
declare type HeaderProp = Text | ReactNode | ReactNode[] | (() => Text | ReactNode | ReactNode[]);
declare type ButtonsProp = HeaderProp & Exclude<HeaderProp, Text>;
export declare const SIDEBAR_APPEARANCE_ANIMATION_DURATION = 300;
/** Свойства {@see ModalSidebar} */
export interface ModalSidebarProps extends ModalSidebarPropsEx, IComponentProps<any, ModalDialogView> {
    header?: HeaderProp;
    buttons?: ButtonsProp;
    onClickBackdrop?: () => void;
    onClickBox?: () => void;
    onClickCloseButton?: () => void;
    contentMaxHeight?: number | string;
    showCloseButton?: boolean;
    showButtonsPanel?: boolean;
    services?: any;
}
export declare const ModalSidebar: (props: ModalSidebarProps) => JSX.Element;
export {};
