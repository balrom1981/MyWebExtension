import { IComponentProps } from '@docsvision/web/core/component';
import { ReactNode } from 'react';
import ModalDialogView from '@docsvision/web/components/modals/modal-dialog/ModalDialogView';
import { ModalDialogBorderSide } from '@docsvision/web/components/modals/modal-dialog/components/ModalDialogBorder';
import { IModalDialogContainerProps } from '@docsvision/web/components/modals/modal-dialog/components/ModalDialogContainer';
import { IStackingModalProps } from '@docsvision/web/components/modals/stacking';
declare type ModalDialogPropsEx = Omit<IStackingModalProps, "visible"> & IModalDialogContainerProps;
declare type HeaderProp = Text | ReactNode | ReactNode[] | (() => Text | ReactNode | ReactNode[]);
declare type ButtonsProp = HeaderProp & Exclude<HeaderProp, Text>;
/** Свойства {@see ModalDialog} */
export interface ModalDialogProps extends ModalDialogPropsEx, IComponentProps<any, ModalDialogView> {
    header?: HeaderProp;
    headerClass?: string;
    buttonPanelClass?: string;
    closeButtonClass?: string;
    name?: string;
    buttons?: ButtonsProp;
    onClickBackdrop?: () => void;
    onClickBox?: () => void;
    onClickCloseButton?: () => void;
    boxMaxWidth?: string;
    boxMaxHeight?: string;
    boxDefaultWidth?: boolean;
    contentMaxHeight?: number | string;
    showBorder?: boolean;
    borderColor?: string;
    borderSide?: ModalDialogBorderSide;
    showCloseButton?: boolean;
    showButtonsPanel?: boolean;
    showBackdrop?: boolean;
    services?: any;
}
export declare const ModalDialog: (props: ModalDialogProps) => JSX.Element;
export {};
