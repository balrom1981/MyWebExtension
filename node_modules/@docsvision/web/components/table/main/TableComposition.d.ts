/// <reference types="react" />
import { SortDirection } from '@docsvision/web/components/table/plugins/sort';
import { ITableData, IRow, IColumn } from '@docsvision/web/components/table/interfaces';
import { ITableDataServiceOptions } from '../plugins/table-data';
import { ITablePlugins } from '../interfaces/ITablePlugins';
import { IFilterActiveColumn } from '@docsvision/web/components/table/plugins/filter';
import { IGroupingServiceOptions } from '../plugins/grouping';
export declare enum PluginSet {
    /** Базовый набор плагинов для простой статичной таблицы с небольшим объемом данных. */
    BasicTable = 0,
    /** Расширенный набор плагинов. */
    FullTable = 1,
    /** Без использования стандартных плагинов. Внимание: свойства onRowClick, onSortRequest, loadData, useAlternativeRowStyles не будут работать. */
    None = 2
}
export interface TableCompositionProps {
    data: ITableData;
    /** @see getRowAlternationPlugins */
    useAlternativeRowStyles?: boolean;
    /** @see getTableDataServicePlugins */
    loadData?: ITableDataServiceOptions;
    /** @see getTableRowClickHandlerPlugins */
    onRowClick?: (row: IRow) => void;
    /** @see TableSortPlugins */
    onSortRequest?: (column: IColumn, sortDirection: SortDirection) => Promise<void>;
    onFilterRequest?: (filterData: IFilterActiveColumn[], services: any) => void;
    /** Набор стандартных плагинов. По умолчанию @see PluginSet.StaticTable */
    standardPluginSet?: PluginSet;
    /** Расширения таблицы. */
    plugins?: ITablePlugins[];
    /** Значения этого свойства отключают плагины с соответствующим значением feature. */
    disabledFeatures?: string[];
    /** Фиксировать ширину столбцов при открытии таблицы или подстраивать ширину таблицы под контейнер. По умолчанию true. */
    fixateOnMount?: boolean;
    groupingOptions?: IGroupingServiceOptions;
    /**
     * Клонировать services контейнер. По умолчанию true. Предотвращает перемешивание сервисов при
     * отрисовке нескольких таблиц на одной странице, однако ограничивает доступ к сервисам таблицы из
     * родительского компонента.
     */
    cloneServices?: boolean;
    services?: any;
}
export declare const TableComposition: (props: TableCompositionProps) => JSX.Element;
