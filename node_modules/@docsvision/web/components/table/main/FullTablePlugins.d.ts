import { ITableData, IRow, IColumn, ITablePlugins } from "../interfaces";
import * as lazyLoading from "../plugins/lazy-loading";
import * as sort from "../plugins/sort";
import * as tableData from "../plugins/table-data";
import * as virtualization from "../plugins/virtualization";
import * as grouping from "../plugins/grouping";
import * as columnList from '../plugins/column-list';
export interface FullTablePluginsProps {
    data: ITableData;
    useAlternativeRowStyles?: boolean;
    loadData?: tableData.ITableDataServiceOptions;
    onRowClick?: (row: IRow) => void;
    onSortRequest?: (column: IColumn, sortDirection: sort.SortDirection) => Promise<void>;
    domain?: string;
    virtualizationOptions?: virtualization.VirtualizationOptions;
    lazyLoadingOptions?: lazyLoading.LazyLoadingOptions;
    groupingOptions?: grouping.IGroupingServiceOptions;
    columnListOptions?: columnList.IColumnListOptions;
    fixateOnMount?: boolean;
}
export declare function getFullTablePlugins(props: FullTablePluginsProps): ITablePlugins;
