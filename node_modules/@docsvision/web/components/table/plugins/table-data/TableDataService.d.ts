import { ITableData, LoadTableDataFunction } from '@docsvision/web/components/table/interfaces';
import { Event, Store } from 'effector';
import { ITableDataService, ILoadRequest } from '@docsvision/web/components/table/plugins/table-data';
import { $Domain } from '@docsvision/web/core/state-management';
import { ISimplePluginData } from '@docsvision/web/core/extensibility/plugins';
import { IReloadRequest } from './IReloadRequest';
export interface ITableDataServiceOptions {
    pageSize: number;
    loadData: LoadTableDataFunction;
}
export declare function getDataInitializedInfo(data: ITableData): ISimplePluginData<boolean>;
/** Сервис, реализующий доступ к данным таблицы. */
export declare class TableDataService implements ITableDataService {
    private options;
    private services;
    $data: Store<ITableData>;
    setData: Event<ITableData>;
    setChangingState: Event<boolean>;
    lastLoad: Promise<void>;
    instanceId: string;
    dataInitialized: Event<ITableData>;
    $isChanging: Store<boolean>;
    constructor(options: ITableDataServiceOptions, services: $Domain);
    load<T>(request: ILoadRequest<T>): Promise<void>;
    reload<T>(request: IReloadRequest<T>): Promise<void>;
    private loadData;
    private getPageCount;
    private getPageNumber;
    private getPageSize;
}
