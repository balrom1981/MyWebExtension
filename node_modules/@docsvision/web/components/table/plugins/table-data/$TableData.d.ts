import { ITableData } from '@docsvision/web/components/table/interfaces';
import { ILoadRequest } from '@docsvision/web/components/table/plugins/table-data/ILoadRequest';
import { ExtendedData } from '@docsvision/web/core/extensibility/plugins';
import { Event, Store } from 'effector';
import { IReloadRequest } from './IReloadRequest';
/** Сервис, реализующий доступ к данным таблицы. */
export interface ITableDataService {
    $data: Store<ITableData>;
    dataInitialized: Event<ITableData>;
    load<T = ExtendedData>(request: ILoadRequest<T>): Promise<void>;
    reload<T = ExtendedData>(request: IReloadRequest<T>): Promise<void>;
    setData(data: ITableData): void;
    $isChanging: Store<boolean>;
    setChangingState(isChanging: boolean): void;
}
/** Сервис, реализующий доступ к данным параметрам таблицы. */
export declare type $TableData = {
    tableData: ITableDataService;
};
export declare const $TableData: string | ((model?: $TableData) => ITableDataService);
