import { ICompositionPlugin } from '@docsvision/web/core/composition';
import { ICellData, ITablePlugins, TablePlugins } from '@docsvision/web/components/table/interfaces';
import { $Domain } from '@docsvision/web/core/state-management';
import { $ScrollPosition } from '../scroll';
import { $TableData } from '../table-data';
import { $LazyLoading } from './$LazyLoading';
import { LazyLoadingOptions } from './LazyLoadingService';
export declare const LazyLoadingFeature = "LazyLoadingFeature";
export declare const LazyLoadingServiceProvider: (options: LazyLoadingOptions) => TablePlugins.ServiceProvider<$LazyLoading & $TableData & $ScrollPosition & $Domain>;
export declare const LoadingCellPlaceholder: ICompositionPlugin<ICellData, any, import("@docsvision/web/core/composition").ICompositionPluginProps<any, ICellData, any>>;
export declare const LoadingMoreRole = "LoadingMore";
export declare const LoadingMorePlaceholder: TablePlugins.Root.Component<$LazyLoading>;
export declare const LazyLoadingPlugins: (options: LazyLoadingOptions) => ITablePlugins;
