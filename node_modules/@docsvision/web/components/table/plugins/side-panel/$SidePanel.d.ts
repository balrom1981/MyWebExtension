import { Store, Event } from 'effector';
import React from 'react';
export declare enum SidePanelTabViewFlags {
    None = 0,
    Icon = 1,
    Name = 2,
    Counter = 4
}
export interface SidePanelTab {
    /** Уникальный идентификатор вкладки */
    id: string;
    /** Отображаемое название вкладки. */
    name: string;
    /** Иконка вкладки. */
    icon: string | React.ReactElement;
    /** Иконка активной вкладки. */
    activeIcon?: string | React.ReactElement;
    /** Индикатор, отображаемый рядом с именем. */
    $counter?: Store<string>;
    /** Как вкладка будет отображаться, если нет других вкладок. */
    singleTabView?: SidePanelTabViewFlags;
    /** Как будет отображаться вторая строка, под табами, если вкладок несколько. */
    multipleTabView?: SidePanelTabViewFlags;
    /** Доступна ли вкладка. */
    $available: Store<boolean>;
}
export interface ISidePanelService {
    readonly $isOpen: Store<boolean>;
    readonly toggle: Event<boolean | void>;
    readonly $tabs: Store<SidePanelTab[]>;
    readonly $availableTabs: Store<SidePanelTab[]>;
    readonly $hasAvailableTabs: Store<boolean>;
    readonly $activeTab: Store<SidePanelTab>;
    readonly $isMobile: Store<boolean>;
    $tabsLoading: Store<boolean>;
    setTabsLoading(loading: boolean): void;
    resetTabs(): void;
    registerTab(tab: SidePanelTab): void;
    unregisterTab(id: string): void;
    openTab(id: string): void;
}
export declare type $SidePanel = {
    sidePanel: ISidePanelService;
};
export declare const $SidePanel: string | ((model?: $SidePanel) => ISidePanelService);
