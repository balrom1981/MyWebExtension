import { $MessageWindow } from "@docsvision/web/components/modals/message-box/$MessageWindow";
import { ICheckboxService } from "@docsvision/web/components/table/plugins/checkbox/$Checkbox";
import { HeaderCellState } from "@docsvision/web/components/table/plugins/checkbox/HeaderCellState";
import { $LazyLoading } from "@docsvision/web/components/table/plugins/lazy-loading";
import { $TableData } from "@docsvision/web/components/table/plugins/table-data";
import { $Resources } from "@docsvision/web/core/localization/$Resources";
import { Optional } from "@docsvision/web/core/services";
import { $Domain } from "@docsvision/web/core/state-management";
import { Event, Store } from "effector";
import { IRow } from "../../interfaces";
export declare class CheckboxService implements ICheckboxService {
    private services;
    $checkboxCellsState: Store<IRow[]>;
    $checkboxHeaderCellState: Store<HeaderCellState>;
    onCellClick: Event<IRow>;
    onHeaderCellClick: Event<boolean>;
    updateCellsState: Event<boolean>;
    updateHeaderCellState: Event<HeaderCellState>;
    clearCellState: Event<string[]>;
    constructor(services: $TableData & $Domain & Optional<$LazyLoading> & Optional<$MessageWindow> & Optional<$Resources>);
    updateAllRows(checked: boolean): any[];
    onCellClickHandler(state: IRow[], row: IRow): IRow[];
    allRowsLoaded(): boolean;
    onHeaderCellClickHandler(checked: boolean): Promise<void>;
}
export declare type $CheckboxService = {
    checkboxService: ICheckboxService;
};
export declare const $CheckboxService: string | ((model?: $CheckboxService) => ICheckboxService);
