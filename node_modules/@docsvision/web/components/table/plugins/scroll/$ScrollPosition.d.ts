import { Store } from 'effector';
import { IRow } from '../../interfaces';
export interface ScrollWindow {
    firstVisibleRow: number;
    firstFullyVisibleRow: number;
    lastVisibleRow: number;
}
/**
 * Интерфейс сервиса {@see $ScrollPosition}.
 */
export interface IScrollPositionService {
    /** Индекс самой верхней полностью видимой строки. */
    readonly $topRowIndex: Store<number>;
    /** Индекс самой верхней и нижней видимой строки. */
    readonly $scrollWindow: Store<ScrollWindow>;
    /** Значение $scrollWindow, которое меняется не чаще чем раз в 100мс. */
    readonly $scrollWindowThrottled: Store<ScrollWindow>;
    /** Выполняет ли сервис управелние скролом. */
    readonly $enabled: Store<boolean>;
    /** Установливает значение {@see $topRowIndex} и вызывает {@see actualizeScroll}. */
    setPosition(rowIndex: number): void;
    /** Обновляет прокрутку контейнера так, что бы строка $topRowIndex стала самой верхней полностью видимой. */
    actualizeScroll(): void;
    /** Устанавливает значение {@see $enabled}. */
    enable(enable: boolean): void;
    /**
     * Возвращает относительное значение прорутки для указанной строки.
     * Используется вместе с {@see setScrollRelativeTo} для фиксации положения прокрутки на элементе при измении DOM.
     */
    getScrollRelativeTo(rowIndex: number): number | undefined;
    /**
     * Восстанавливает состояние прокрутки, так, что элемент оказывается в той же точке экрана, что и на момент вызова {@see getScrollRelativeTo}.
     */
    setScrollRelativeTo(rowIndex: number, relativeScroll: number): void;
    registerRowElement(row: IRow, element: HTMLElement | undefined): void;
    registerHeaderElement(element: HTMLElement | undefined): void;
}
/**
 * Сервис, управляющий позицией скрола с точки зрения строк таблицы.
 *
 * Севрис следит за видимостью строк в скрол-контейнере и реализует прокрутку до указанной строки.
 */
export declare type $ScrollPosition = {
    scrollPosition: IScrollPositionService;
};
export declare const $ScrollPosition: string | ((model?: $ScrollPosition) => IScrollPositionService);
