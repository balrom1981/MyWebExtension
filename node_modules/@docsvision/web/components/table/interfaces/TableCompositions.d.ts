import { IComposition } from "@docsvision/web/core/composition";
import { ICellData } from "./ICellData";
import { IColumnData } from "./IColumnData";
import { IRowData } from "./IRowData";
import { ITableData } from "./ITableData";
import { TableCompositionTypes } from "./TableCompositionNames";
export declare namespace TableCompositions {
    type Root<TServices = any> = IComposition<TableCompositionTypes.Root, ITableData, TServices>;
    type Toolbar<TServices = any> = IComposition<TableCompositionTypes.Toolbar, ITableData, TServices>;
    type Table<TServices = any> = IComposition<TableCompositionTypes.Table, ITableData, TServices>;
    type Header<TServices = any> = IComposition<TableCompositionTypes.Header, ITableData, TServices>;
    type HeaderRow<TServices = any> = IComposition<TableCompositionTypes.HeaderRow, ITableData, TServices>;
    type HeaderCell<TServices = any> = IComposition<TableCompositionTypes.HeaderCell, IColumnData, TServices>;
    type Body<TServices = any> = IComposition<TableCompositionTypes.Body, ITableData, TServices>;
    type Row<TServices = any> = IComposition<TableCompositionTypes.Row, IRowData, TServices>;
    type Cell<TServices = any> = IComposition<TableCompositionTypes.Cell, ICellData, TServices>;
    type Footer<TServices = any> = IComposition<TableCompositionTypes.Footer, ITableData, TServices>;
}
