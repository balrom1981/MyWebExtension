import { Event } from "microevent.ts";
export interface IModalStackItem {
    zIndex: number;
    onUpdate: (newZIndex: number) => void;
}
/**
 * Вспомогательный класс для работы с приоритетом модальных окон.
 * По умолчанию он уже используется в ModalBackdrop и ModalWindow,
 * поэтому интегрировать его самостоятельно обычно не требуется.
 *
 */
export declare class ModalStackService {
    static readonly DEFAULT_ZINDEX = 1000;
    private lastZIndex;
    private data;
    modalRegistered: Event<unknown>;
    modalUnregistered: Event<unknown>;
    constructor(defaultZIndex?: number);
    /**
     * Зарегистрировать модальное окно
     * @param modal Модальное окно
     * @param onUpdate Вызывается при перерасчёте zIndex компонента, здесь зарегистрированное модальное окно должно перерисовать себя.
     * @param updateAfterRegister Вызвать ли onUpdate сразу после регистрации или самому по-другому обработать
     * zIndex через вернувшееся значение из функции.
     */
    register(modal: any, onUpdate: (newZIndex: number) => void, updateAfterRegister?: boolean): number;
    /**
     * Удалить указанное модальное окно
     * @param component Модальное окно
     * @returns Удалось ли удалить модальное окно
     */
    unregister(modal: any): boolean;
}
